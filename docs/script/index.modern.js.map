{"version":3,"file":"index.modern.js","sources":["../src/Constants.ts","../src/Mock.js","../node_modules/reflect-metadata/Reflect.js","../node_modules/json-object-mapper/dist/ObjectMapper.js","../src/Api.ts","../src/Manage.ts","../src/Admin.ts","../src/Driver.ts","../src/Lot.ts","../src/Payment.ts","../src/Request.ts","../src/Message.ts","../src/Collection.ts","../src/Notification.ts"],"sourcesContent":["export enum C {\n  COST_BY_MILLISECONDS = 0.001667,\n\n  ADMIN_STATE_ONLINE = \"online\",\n  ADMIN_STATE_OFFLINE = \"offline\",\n\n  DRIVER_STATE_ACTIVE = \"active\",\n  DRIVER_STATE_BANNED = \"banned\",\n\n  SPOT_TYPE_STANDARD = \"standard\",\n\n  SPOT_STATE_OPENED = \"opened\",\n  SPOT_STATE_RESERVED = \"reserved\",\n  SPOT_STATE_OCCUPIED = \"occupied\",\n\n  LOT_STATE_OPENED = \"opened\",\n  LOT_STATE_CLOSED = \"closed\",\n\n  PAYMENT_ANNOTATION_CREDIT = \"credit\",\n  PAYMENT_ANNOTATION_DEBIT = \"debit\",\n\n  PAYMENT_ACTIVE = \"active\",\n  PAYMENT_PROCESSING = \"processing\",\n  PAYMENT_SUCCESSFUL = \"successful\",\n  PAYMENT_DECLINED = \"declined\",\n\n  REQUEST_PENDING = \"pending\",\n  REQUEST_ACCEPTED = \"accepted\",\n  REQUEST_REJECTED = \"rejected\",\n  REQUEST_USED = \"used\",\n  REQUEST_EXPIRED = \"expired\",\n\n  MESSAGE_STATE_DELIVERED = \"delivered\",\n  MESSAGE_STATE_READ = \"read\",\n\n  NOTIFICATION_STATE_DISPATCHED = \"dispatched\",\n  NOTIFICATION_STATE_RECEIVED = \"received\",\n\n  ORM_LOTS = \"LOTS\",\n  ORM_ADMINS = \"ADMINS\",\n  ORM_DRIVERS = \"DRIVERS\",\n  ORM_MESSAGES = \"MESSAGES\",\n  ORM_REQUESTS = \"REQUESTS\",\n  ORM_PAYMENTS = \"PAYMENTS\",\n  ORM_NOTIFICATIONS = \"NOTIFICATIONS\",\n\n  DB_FILE_PATH = \"./public/db/index.json\",\n\n  API_ENDPOINT_AUTH = \"/api/v1/auth?\",\n  API_ENDPOINT_RECOVER_EMAIL = \"/api/v1/recover-email?\",\n  API_ENDPOINT_GET_ALL = \"/api/v1/get_all?\",\n  API_ENDPOINT_GET = \"/api/v1/get?\",\n  API_ENDPOINT_PUT = \"/api/v1/put?\",\n  API_ENDPOINT_POST = \"/api/v1/post?\",\n  API_ENDPOINT_DELETE = \"/api/v1/delete?\",\n}\n","import { C } from \"./Constants\";\n\nclass Mock {\n  db;\n\n  constructor() {\n    fetch(C.DB_FILE_PATH)\n      .then((res) => res.json())\n      .then((data) => {\n        this.db = data;\n      })\n      .catch((error) => console.error(error));\n  }\n\n  backend({ body, endpoint }) {\n    return new Promise((resolve, reject) => {\n      const idx = setInterval(() => {\n        if (this.db) {\n          clearInterval(idx);\n          let pointer = [];\n          const { pathname, searchParams } = new URL(\n            \"http://localhost:3000\" + endpoint\n          );\n          const dbTable = searchParams.get(\"table\");\n          for (const [key, value] of searchParams) {\n            if (key != \"table\") {\n              pointer = [key, value];\n            }\n          }\n\n          switch (pathname + \"?\") {\n            case C.API_ENDPOINT_GET_ALL:\n              resolve(this.db[dbTable]);\n              break;\n\n            case C.API_ENDPOINT_GET:\n              resolve(\n                this.db[dbTable].filter(\n                  (entry) => entry[pointer[0]] === pointer[1]\n                )[0]\n              );\n              break;\n\n            case C.API_ENDPOINT_POST:\n              this.db[dbTable].push(JSON.parse(body));\n              resolve(JSON.parse(body));\n              break;\n\n            case C.API_ENDPOINT_PUT:\n              let res;\n              this.db[dbTable] = this.db[dbTable].map((entry) => {\n                if (entry[pointer[0]] === pointer[1]) {\n                  res = { ...entry, ...JSON.parse(body) };\n                  return res;\n                } else {\n                  return entry;\n                }\n              });\n              resolve(res);\n              break;\n\n            case C.API_ENDPOINT_DELETE:\n              this.db[dbTable] = this.db[dbTable].filter(\n                (entry) => entry[pointer[0]] !== pointer[1]\n              );\n              resolve(\"{status: SUCCESSFUL}\");\n              break;\n\n            case C.API_ENDPOINT_AUTH:\n              resolve(\n                this.db[dbTable].filter(\n                  (entry) =>\n                    entry.password === JSON.parse(body).password &&\n                    (entry.name === JSON.parse(body).name ||\n                      (entry.email && entry.email === JSON.parse(body).email))\n                )[0]\n              );\n              break;\n\n            case C.API_ENDPOINT_RECOVER_EMAIL:\n              resolve(\"{status: SUCCESSFUL}\");\n              break;\n\n            default:\n              reject(`Unknown api endpoint ${pathname}`);\n              break;\n          }\n        }\n      }, 500);\n    });\n  }\n}\n\nexport const M = new Mock();\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __metadata(k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n}\n\n/**\n * Reflect Metadata json properties storage name.\n */\nvar METADATA_JSON_PROPERTIES_NAME = 'JsonProperties';\nvar METADATA_JSON_IGNORE_NAME = 'JsonIgnore';\n/**\n * Returns the JsonProperty decorator metadata.\n */\nvar getJsonPropertyDecoratorMetadata = function (target, key) {\n    return Reflect.getMetadata(JSON_PROPERTY_DECORATOR_NAME, target, key);\n};\n/**\n * Returns the JsonProperty name (if any) associated with the object instance.\n * If any JsonProperty metadata found, it returns the key name as the name of the property.\n */\nvar getKeyName = function (target, key) {\n    var metadata = getJsonPropertyDecoratorMetadata(target, key);\n    // tslint:disable-next-line:triple-equals\n    if (metadata != undefined && metadata.name != undefined) {\n        return metadata.name;\n    }\n    else {\n        return key;\n    }\n};\n/**\n * Returns the JsonPropertyDecoratorMetadata for the property\n */\nvar getJsonPropertyDecorator = function (metadata) {\n    return getPropertyDecorator(JSON_PROPERTY_DECORATOR_NAME, metadata);\n};\n/**\n * Returns the JsonIgnoreDecoratorMetadata for the property\n */\nvar getJsonIgnoreDecorator = function () {\n    return function (target, propertyKey) {\n        Reflect.defineMetadata(METADATA_JSON_IGNORE_NAME, true, target, propertyKey);\n    };\n};\nvar getPropertyDecorator = function (metadataKey, metadata) {\n    return Reflect.metadata(metadataKey, metadata);\n};\n/**\n * Checks to see if the specified type is a standard JS object type.\n */\nvar isSimpleType = function (typeName) {\n    switch (typeName) {\n        case Constants.STRING_TYPE: return true;\n        case Constants.NUMBER_TYPE: return true;\n        case Constants.BOOLEAN_TYPE: return true;\n        case Constants.DATE_TYPE: return true;\n        case Constants.STRING_TYPE_LOWERCASE: return true;\n        case Constants.NUMBER_TYPE_LOWERCASE: return true;\n        case Constants.BOOLEAN_TYPE_LOWERCASE: return true;\n        case Constants.DATE_TYPE_LOWERCASE: return true;\n        default: return false;\n    }\n};\n/**\n * Returns the the instance type name by looking at the constructor name.\n * Stupid IE does not have name property! Hence the hack.\n */\nvar extractClassname = function (instance) {\n    var instr = instance.toString();\n    var i1 = instr.indexOf('class');\n    var i2 = instr.indexOf('{', i1 + 5);\n    return instr.substring(i1 + 5, i2).trim();\n};\nvar getTypeNameFromInstance = function (instance) {\n    return instance.name || extractClassname(instance);\n};\nvar getType = function (instance, key) {\n    return Reflect.getMetadata('design:type', instance, key);\n};\nvar isArrayType = function (instance, key) {\n    return Array === getType(instance, key);\n};\nvar getTypeName = function (instance, key) {\n    var type = getType(instance, key);\n    // tslint:disable-next-line:triple-equals\n    if (type != undefined) {\n        return getTypeNameFromInstance(type);\n    }\n    return type;\n};\nvar Constants = {\n    OBJECT_TYPE: 'Object',\n    OBJECT_TYPE_LOWERCASE: 'object',\n    STRING_TYPE: 'String',\n    STRING_TYPE_LOWERCASE: 'string',\n    NUMBER_TYPE: 'Number',\n    NUMBER_TYPE_LOWERCASE: 'number',\n    BOOLEAN_TYPE: 'Boolean',\n    BOOLEAN_TYPE_LOWERCASE: 'boolean',\n    DATE_TYPE: 'Date',\n    DATE_TYPE_LOWERCASE: 'date',\n    ARRAY_TYPE: 'Array',\n    ARRAY_TYPE_LOWERCASE: 'array',\n    FROM_ARRAY: 'fromArray'\n};\nvar getCachedType = function (type, cache) {\n    // tslint:disable-next-line:triple-equals\n    var typeName = type.getJsonObjectMapperCacheKey != undefined ? type.getJsonObjectMapperCacheKey() : getTypeNameFromInstance(type);\n    if (!cache[typeName]) {\n        cache[typeName] = new type();\n    }\n    return cache[typeName];\n};\n\n/**\n * Decorator names\n */\nvar JSON_PROPERTY_DECORATOR_NAME = 'JsonProperty';\n\n(function (AccessType) {\n    AccessType[AccessType[\"READ_ONLY\"] = 0] = \"READ_ONLY\";\n    AccessType[AccessType[\"WRITE_ONLY\"] = 1] = \"WRITE_ONLY\";\n    AccessType[AccessType[\"BOTH\"] = 2] = \"BOTH\";\n})(exports.AccessType || (exports.AccessType = {}));\n/**\n * JsonProperty Decorator function.\n */\nvar JsonProperty = function (metadata) {\n    if (typeof metadata === 'string') {\n        return getJsonPropertyDecorator({ name: metadata, required: false, access: exports.AccessType.BOTH });\n    }\n    else {\n        return getJsonPropertyDecorator(metadata);\n    }\n};\n/**\n * Decorator for specifying cache key.\n * Used for Serializer/Deserializer caching.\n *\n * @export\n * @param {string} key\n * @returns\n */\nvar CacheKey = function (key) {\n    return function (f) {\n        var functionName = 'getJsonObjectMapperCacheKey';\n        var functionImpl = new Function(\"return '\" + key + \"';\");\n        f[functionName] = functionImpl;\n    };\n};\n/**\n * JsonIgnore Decorator function.\n */\nvar JsonIgnore = function () {\n    return getJsonIgnoreDecorator();\n};\n/**\n * Json convertion error type.\n */\nvar JsonConverstionError = (function () {\n    function JsonConverstionError(message, json) {\n        this.json = json;\n        this.message = message;\n        this.stack = (new Error()).stack;\n    }\n    return JsonConverstionError;\n}());\n\nvar SimpleTypeCoverter = function (value, type) {\n    return type === Constants.DATE_TYPE ? new Date(value) : value;\n};\n/**\n * Deserializes a standard js object type(string, number and boolean) from json.\n */\nvar DeserializeSimpleType = function (instance, instanceKey, type, json, jsonKey) {\n    try {\n        instance[instanceKey] = json[jsonKey];\n        return [];\n    }\n    catch (e) {\n        // tslint:disable-next-line:no-string-literal\n        throw new JsonConverstionError(\"Property '\" + instanceKey + \"' of \" + instance.constructor['name'] + \" does not match datatype of \" + jsonKey, json);\n    }\n};\n/**\n * Deserializes a standard js Date object type from json.\n */\nvar DeserializeDateType = function (instance, instanceKey, type, json, jsonKey) {\n    try {\n        instance[instanceKey] = new Date(json[jsonKey]);\n        return [];\n    }\n    catch (e) {\n        // tslint:disable-next-line:no-string-literal\n        throw new JsonConverstionError(\"Property '\" + instanceKey + \"' of \" + instance.constructor['name'] + \" does not match datatype of \" + jsonKey, json);\n    }\n};\n/**\n * Deserializes a JS array type from json.\n */\nvar DeserializeArrayType = function (instance, instanceKey, type, json, jsonKey) {\n    var jsonObject = (jsonKey !== undefined) ? (json[jsonKey] || []) : json;\n    var jsonArraySize = jsonObject.length;\n    var conversionFunctionsList = [];\n    var arrayInstance = [];\n    instance[instanceKey] = arrayInstance;\n    if (jsonArraySize > 0) {\n        for (var i = 0; i < jsonArraySize; i++) {\n            if (jsonObject[i]) {\n                var typeName = getTypeNameFromInstance(type);\n                if (!isSimpleType(typeName)) {\n                    var typeInstance = new type();\n                    conversionFunctionsList.push({ functionName: Constants.OBJECT_TYPE, instance: typeInstance, json: jsonObject[i] });\n                    arrayInstance.push(typeInstance);\n                }\n                else {\n                    arrayInstance.push(conversionFunctions[Constants.FROM_ARRAY](jsonObject[i], typeName));\n                }\n            }\n        }\n    }\n    return conversionFunctionsList;\n};\n/**\n * Deserializes a js object type from json.\n */\nvar DeserializeComplexType = function (instance, instanceKey, type, json, jsonKey) {\n    var conversionFunctionsList = [];\n    var objectInstance;\n    /**\n     * If instanceKey is not passed on then it's the first iteration of the functions.\n     */\n    // tslint:disable-next-line:triple-equals\n    if (instanceKey != undefined) {\n        objectInstance = new type();\n        instance[instanceKey] = objectInstance;\n    }\n    else {\n        objectInstance = instance;\n    }\n    var objectKeys = Object.keys(objectInstance);\n    objectKeys = objectKeys.concat((Reflect.getMetadata(METADATA_JSON_PROPERTIES_NAME, objectInstance) || []).filter(function (item) {\n        if (objectInstance.constructor.prototype.hasOwnProperty(item) && Object.getOwnPropertyDescriptor(objectInstance.constructor.prototype, item).set === undefined) {\n            // Property does not have setter\n            return false;\n        }\n        return objectKeys.indexOf(item) < 0;\n    }));\n    objectKeys = objectKeys.filter(function (item) {\n        return !Reflect.hasMetadata(METADATA_JSON_IGNORE_NAME, objectInstance, item);\n    });\n    objectKeys.forEach(function (key) {\n        /**\n         * Check if there is any DecoratorMetadata attached to this property, otherwise create a new one.\n         */\n        var metadata = getJsonPropertyDecoratorMetadata(objectInstance, key);\n        if (metadata === undefined) {\n            metadata = { name: key, required: false, access: exports.AccessType.BOTH };\n        }\n        // tslint:disable-next-line:triple-equals\n        if (exports.AccessType.WRITE_ONLY != metadata.access) {\n            /**\n             * Check requried property\n             */\n            if (metadata.required && json[metadata.name] === undefined) {\n                throw new JsonConverstionError(\"JSON structure does have have required property '\" + metadata.name + \"' as required by '\" + getTypeNameFromInstance(objectInstance) + \"[\" + key + \"]\", json);\n            }\n            // tslint:disable-next-line:triple-equals\n            var jsonKeyName = metadata.name != undefined ? metadata.name : key;\n            // tslint:disable-next-line:triple-equals\n            if (json[jsonKeyName] != undefined) {\n                /**\n                 * If metadata has deserializer, use that one instead.\n                 */\n                // tslint:disable-next-line:triple-equals\n                if (metadata.deserializer != undefined) {\n                    objectInstance[key] = getOrCreateDeserializer(metadata.deserializer).deserialize(json[jsonKeyName]);\n                }\n                else if (metadata.type === undefined) {\n                    /**\n                    * If we do not have any type defined, then we can't do much here but to hope for the best.\n                    */\n                    objectInstance[key] = json[jsonKeyName];\n                }\n                else {\n                    if (!isArrayType(objectInstance, key)) {\n                        // tslint:disable-next-line:triple-equals\n                        var typeName = metadata.type != undefined ? getTypeNameFromInstance(metadata.type) : getTypeName(objectInstance, key);\n                        if (!isSimpleType(typeName)) {\n                            objectInstance[key] = new metadata.type();\n                            conversionFunctionsList.push({ functionName: Constants.OBJECT_TYPE, type: metadata.type, instance: objectInstance[key], json: json[jsonKeyName] });\n                        }\n                        else {\n                            conversionFunctions[typeName](objectInstance, key, typeName, json, jsonKeyName);\n                        }\n                    }\n                    else {\n                        var moreFunctions = conversionFunctions[Constants.ARRAY_TYPE](objectInstance, key, metadata.type, json, jsonKeyName);\n                        moreFunctions.forEach(function (struct) {\n                            conversionFunctionsList.push(struct);\n                        });\n                    }\n                }\n            }\n        }\n    });\n    return conversionFunctionsList;\n};\n/**\n * Object to cache deserializers\n */\nvar deserializers = {};\n/**\n * Checks to see if the deserializer already exists or not.\n * If not, creates a new one and caches it, returns the\n * cached instance otherwise.\n */\nvar getOrCreateDeserializer = function (type) {\n    return getCachedType(type, deserializers);\n};\n/**\n * List of JSON object conversion functions.\n */\nvar conversionFunctions = {};\nconversionFunctions[Constants.OBJECT_TYPE] = DeserializeComplexType;\nconversionFunctions[Constants.ARRAY_TYPE] = DeserializeArrayType;\nconversionFunctions[Constants.DATE_TYPE] = DeserializeDateType;\nconversionFunctions[Constants.STRING_TYPE] = DeserializeSimpleType;\nconversionFunctions[Constants.NUMBER_TYPE] = DeserializeSimpleType;\nconversionFunctions[Constants.BOOLEAN_TYPE] = DeserializeSimpleType;\nconversionFunctions[Constants.FROM_ARRAY] = SimpleTypeCoverter;\nconversionFunctions[Constants.OBJECT_TYPE_LOWERCASE] = DeserializeComplexType;\nconversionFunctions[Constants.ARRAY_TYPE_LOWERCASE] = DeserializeArrayType;\nconversionFunctions[Constants.DATE_TYPE_LOWERCASE] = DeserializeDateType;\nconversionFunctions[Constants.STRING_TYPE_LOWERCASE] = DeserializeSimpleType;\nconversionFunctions[Constants.NUMBER_TYPE_LOWERCASE] = DeserializeSimpleType;\nconversionFunctions[Constants.BOOLEAN_TYPE_LOWERCASE] = DeserializeSimpleType;\n\nvar SerializeArrayType = function (parentStructure, instanceStructure, instanceIndex) {\n    var furtherSerializationStructures = {};\n    var arrayInstance = instanceStructure.instance;\n    instanceStructure.visited = true;\n    arrayInstance.forEach(function (value) {\n        if (value !== undefined) {\n            if (!isSimpleType(typeof value)) {\n                var struct = {\n                    id: uniqueId(),\n                    type: Constants.OBJECT_TYPE,\n                    instance: value,\n                    parentIndex: instanceIndex,\n                    values: [],\n                    key: undefined,\n                    visited: false\n                };\n                furtherSerializationStructures[struct.id] = struct;\n            }\n            else {\n                instanceStructure.values.push(serializeFunctions[typeof value](undefined, value, serializers[typeof value]));\n            }\n        }\n    });\n    return createArrayOfSerializationStructures(furtherSerializationStructures);\n};\nvar createArrayOfSerializationStructures = function (serializationStructuresObject) {\n    var serializationStructures = [];\n    Object.keys(serializationStructuresObject).forEach(function (key) {\n        serializationStructures.push(serializationStructuresObject[key]);\n    });\n    return serializationStructures;\n};\nvar serializeObject = function (key, instanceValuesStack) {\n    var json = (key !== undefined ? \"\\\"\" + key + \"\\\":\" : '');\n    return json + \"{\" + instanceValuesStack.join() + \"}\";\n};\nvar serializeArray = function (key, instanceValuesStack) {\n    var json = (key !== undefined ? \"\\\"\" + key + \"\\\":\" : '');\n    return json + \"[\" + instanceValuesStack.join() + \"]\";\n};\nvar mergeObjectOrArrayValuesAndCopyToParents = function (instanceStructure, parentStructure) {\n    mergeObjectOrArrayValues(instanceStructure);\n    parentStructure.values.push(instanceStructure.values.pop());\n};\nvar mergeObjectOrArrayValues = function (instanceStructure) {\n    var mergedValue;\n    if (instanceStructure.type === Constants.OBJECT_TYPE) {\n        mergedValue = serializeObject(instanceStructure.key, instanceStructure.values);\n    }\n    else {\n        mergedValue = serializeArray(instanceStructure.key, instanceStructure.values);\n    }\n    instanceStructure.values = [];\n    instanceStructure.values.push(mergedValue);\n};\nvar SerializeObjectType = function (parentStructure, instanceStructure, instanceIndex) {\n    var furtherSerializationStructures = {};\n    instanceStructure.visited = true;\n    var objectKeys = Object.keys(instanceStructure.instance);\n    objectKeys = objectKeys.concat((Reflect.getMetadata(METADATA_JSON_PROPERTIES_NAME, instanceStructure.instance) || []).filter(function (item) {\n        if (instanceStructure.instance.constructor.prototype.hasOwnProperty(item) && Object.getOwnPropertyDescriptor(instanceStructure.instance.constructor.prototype, item).get === undefined) {\n            // Property does not have getter\n            return false;\n        }\n        return objectKeys.indexOf(item) < 0;\n    }));\n    objectKeys = objectKeys.filter(function (item) {\n        return !Reflect.hasMetadata(METADATA_JSON_IGNORE_NAME, instanceStructure.instance, item);\n    });\n    objectKeys.forEach(function (key) {\n        var keyInstance = instanceStructure.instance[key];\n        if (keyInstance === null) {\n            instanceStructure.values.push(\"\\\"\" + key + \"\\\":\" + keyInstance);\n        }\n        else if (keyInstance !== undefined) {\n            var metadata = getJsonPropertyDecoratorMetadata(instanceStructure.instance, key);\n            if (metadata !== undefined && exports.AccessType.READ_ONLY === metadata.access) {\n            }\n            else if (metadata !== undefined && metadata.serializer !== undefined) {\n                var serializer = getOrCreateSerializer(metadata.serializer);\n                instanceStructure.values.push(serializeFunctions[Constants.STRING_TYPE](getKeyName(instanceStructure.instance, key), keyInstance, serializer));\n            }\n            else {\n                if (keyInstance instanceof Array) {\n                    var struct = {\n                        id: uniqueId(),\n                        type: Constants.ARRAY_TYPE,\n                        instance: keyInstance,\n                        parentIndex: instanceIndex,\n                        values: [],\n                        key: getKeyName(instanceStructure.instance, key),\n                        visited: false\n                    };\n                    furtherSerializationStructures[struct.id] = struct;\n                }\n                else if (!isSimpleType(typeof keyInstance)) {\n                    var struct = {\n                        id: uniqueId(),\n                        type: Constants.OBJECT_TYPE,\n                        instance: keyInstance,\n                        parentIndex: instanceIndex,\n                        values: [],\n                        key: getKeyName(instanceStructure.instance, key),\n                        visited: false\n                    };\n                    furtherSerializationStructures[struct.id] = struct;\n                }\n                else {\n                    var serializer = serializers[typeof keyInstance];\n                    instanceStructure.values.push(serializeFunctions[typeof keyInstance](getKeyName(instanceStructure.instance, key), keyInstance, serializer));\n                }\n            }\n        }\n    });\n    return createArrayOfSerializationStructures(furtherSerializationStructures);\n};\n/**\n * Serialize any type with key value pairs\n */\nvar SerializeSimpleType = function (key, instance, serializer) {\n    var value = serializer.serialize(instance);\n    if (key !== undefined) {\n        return \"\\\"\" + key + \"\\\":\" + value;\n    }\n    else {\n        return value;\n    }\n};\nvar DateSerializer = (function () {\n    function DateSerializer() {\n        this.serialize = function (value) {\n            return value.getTime();\n        };\n    }\n    DateSerializer = __decorate([\n        CacheKey('DateSerializer'), \n        __metadata('design:paramtypes', [])\n    ], DateSerializer);\n    return DateSerializer;\n}());\nvar StringSerializer = (function () {\n    function StringSerializer() {\n        this.serialize = function (value) {\n            return JSON.stringify(value);\n        };\n    }\n    StringSerializer = __decorate([\n        CacheKey('StringSerializer'), \n        __metadata('design:paramtypes', [])\n    ], StringSerializer);\n    return StringSerializer;\n}());\nvar NumberSerializer = (function () {\n    function NumberSerializer() {\n        this.serialize = function (value) {\n            return value;\n        };\n    }\n    NumberSerializer = __decorate([\n        CacheKey('NumberSerializer'), \n        __metadata('design:paramtypes', [])\n    ], NumberSerializer);\n    return NumberSerializer;\n}());\nvar BooleanSerializer = (function () {\n    function BooleanSerializer() {\n        this.serialize = function (value) {\n            return value;\n        };\n    }\n    BooleanSerializer = __decorate([\n        CacheKey('BooleanSerializer'), \n        __metadata('design:paramtypes', [])\n    ], BooleanSerializer);\n    return BooleanSerializer;\n}());\n/**\n * Object to cache serializers\n */\nvar serializers = {};\nserializers[Constants.STRING_TYPE] = new StringSerializer();\nserializers[Constants.NUMBER_TYPE] = new NumberSerializer();\nserializers[Constants.DATE_TYPE] = new DateSerializer();\nserializers[Constants.BOOLEAN_TYPE] = new BooleanSerializer();\nserializers[Constants.STRING_TYPE_LOWERCASE] = serializers[Constants.STRING_TYPE];\nserializers[Constants.NUMBER_TYPE_LOWERCASE] = serializers[Constants.NUMBER_TYPE];\nserializers[Constants.DATE_TYPE_LOWERCASE] = serializers[Constants.DATE_TYPE];\nserializers[Constants.BOOLEAN_TYPE_LOWERCASE] = serializers[Constants.BOOLEAN_TYPE];\n/**\n * Checks to see if the serializer already exists or not.\n * If not, creates a new one and caches it, returns the\n * cached instance otherwise.\n */\nvar getOrCreateSerializer = function (type) {\n    return getCachedType(type, serializers);\n};\nvar serializeFunctions = [];\nserializeFunctions[Constants.STRING_TYPE] = SerializeSimpleType;\nserializeFunctions[Constants.NUMBER_TYPE] = SerializeSimpleType;\nserializeFunctions[Constants.BOOLEAN_TYPE] = SerializeSimpleType;\nserializeFunctions[Constants.DATE_TYPE] = SerializeSimpleType;\nserializeFunctions[Constants.ARRAY_TYPE] = SerializeArrayType;\nserializeFunctions[Constants.OBJECT_TYPE] = SerializeObjectType;\nserializeFunctions[Constants.STRING_TYPE_LOWERCASE] = SerializeSimpleType;\nserializeFunctions[Constants.NUMBER_TYPE_LOWERCASE] = SerializeSimpleType;\nserializeFunctions[Constants.BOOLEAN_TYPE_LOWERCASE] = SerializeSimpleType;\nserializeFunctions[Constants.DATE_TYPE_LOWERCASE] = SerializeSimpleType;\nserializeFunctions[Constants.ARRAY_TYPE_LOWERCASE] = SerializeArrayType;\nserializeFunctions[Constants.OBJECT_TYPE_LOWERCASE] = SerializeObjectType;\nvar uniqueId = function () {\n    return Math.random() + \"-\" + Date.now();\n};\n\n(function (ObjectMapper) {\n    /**\n     * Deserializes an array of object types with the passed on JSON data.\n     */\n    ObjectMapper.deserializeArray = function (type, json) {\n        var ObjectsArrayParent = (function () {\n            function ObjectsArrayParent() {\n                this.instances = undefined;\n            }\n            return ObjectsArrayParent;\n        }());\n        var parent = new ObjectsArrayParent();\n        runDeserialization(conversionFunctions[Constants.ARRAY_TYPE](parent, 'instances', type, json, undefined));\n        return parent.instances;\n    };\n    /**\n     * Deserializes a Object type with the passed on JSON data.\n     */\n    ObjectMapper.deserialize = function (type, json) {\n        var dtoInstance = new type();\n        var conversionFunctionStructure = {\n            functionName: Constants.OBJECT_TYPE,\n            instance: dtoInstance,\n            json: json,\n        };\n        runDeserialization([conversionFunctionStructure]);\n        return dtoInstance;\n    };\n    var runDeserialization = function (conversionFunctionStructures) {\n        var converstionFunctionsArray = [];\n        conversionFunctionStructures.forEach(function (struct) {\n            converstionFunctionsArray.push(struct);\n        });\n        var conversionFunctionStructure = converstionFunctionsArray[0];\n        // tslint:disable-next-line:triple-equals\n        while (conversionFunctionStructure != undefined) {\n            var stackEntries = conversionFunctions[conversionFunctionStructure.functionName](conversionFunctionStructure.instance, conversionFunctionStructure.instanceKey, conversionFunctionStructure.type, conversionFunctionStructure.json, conversionFunctionStructure.jsonKey);\n            stackEntries.forEach(function (structure) {\n                converstionFunctionsArray.push(structure);\n            });\n            conversionFunctionStructure = converstionFunctionsArray.pop();\n        }\n    };\n    /**\n     * Serializes an object instance to JSON string.\n     */\n    ObjectMapper.serialize = function (obj) {\n        var stack = [];\n        var struct = {\n            id: undefined,\n            type: Array.isArray(obj) === true ? Constants.ARRAY_TYPE : Constants.OBJECT_TYPE,\n            instance: obj,\n            parentIndex: undefined,\n            values: [],\n            key: undefined,\n            visited: false\n        };\n        stack.push(struct);\n        do {\n            var instanceStruct = stack[stack.length - 1];\n            var parentStruct = stack[stack.length > 1 ? instanceStruct.parentIndex : 0];\n            if (instanceStruct.visited) {\n                mergeObjectOrArrayValuesAndCopyToParents(instanceStruct, parentStruct);\n                stack.pop();\n            }\n            else {\n                var moreStructures = serializeFunctions[instanceStruct.type](parentStruct, instanceStruct, stack.length - 1);\n                if (moreStructures.length > 0) {\n                    var index = moreStructures.length;\n                    while (--index >= 0) {\n                        stack.push(moreStructures[index]);\n                    }\n                }\n                else {\n                    if (stack.length > 1) {\n                        mergeObjectOrArrayValuesAndCopyToParents(instanceStruct, parentStruct);\n                    }\n                    stack.pop();\n                }\n            }\n        } while (stack.length > 1);\n        mergeObjectOrArrayValues(struct);\n        return struct.values[0];\n    };\n})(exports.ObjectMapper || (exports.ObjectMapper = {}));\n\nexports.JsonProperty = JsonProperty;\nexports.JsonConverstionError = JsonConverstionError;\nexports.CacheKey = CacheKey;\nexports.JsonIgnore = JsonIgnore;\nexports.DateSerializer = DateSerializer;\n//# sourceMappingURL=ObjectMapper.js.map\n","import { C } from \"./Constants\";\nimport { M } from \"./Mock\";\nimport { ObjectMapper, JsonIgnore } from \"./vendors\";\n\nexport interface IApiProps {\n  ORM:\n    | C.ORM_ADMINS\n    | C.ORM_DRIVERS\n    | C.ORM_LOTS\n    | C.ORM_MESSAGES\n    | C.ORM_NOTIFICATIONS\n    | C.ORM_REQUESTS\n    | C.ORM_PAYMENTS;\n  uid: string;\n}\n\ninterface IFetchProps {\n  body: String;\n  endpoint: string;\n  method: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\";\n}\n\nexport class Api {\n  // @JsonIgnore()\n  public mem;\n\n  public ORM: IApiProps[\"ORM\"];\n  public uid: IApiProps[\"uid\"];\n\n  constructor(uid?: IApiProps[\"uid\"]) {\n    this.uid = uid || Math.random().toString(16).slice(2);\n  }\n\n  protected deserializeArray<T>(dtoList: Object[]) {\n    return ObjectMapper.deserializeArray<T>(this.constructor as any, dtoList);\n  }\n\n  protected deserialize<T>(dto: Object) {\n    return ObjectMapper.deserialize<T>(this.constructor as any, dto);\n  }\n\n  protected serialize(cls: Object) {\n    return ObjectMapper.serialize(cls);\n  }\n\n  protected parseQuery(arg = {}) {\n    return new URLSearchParams({ ...arg });\n  }\n\n  protected fetch({ body, endpoint, method }: Partial<IFetchProps>) {\n    // return fetch(endpoint, {\n    //   method,\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   ...(body ? { body } : {}),\n    // })\n    //   .then((response) => response.json())\n    //   .then((data) => JSON.parse(data))\n    //   .catch((error) => console.error(error));\n\n    // TODO:\n    // using mock backend (tech debt)\n    return Promise.resolve(M.backend({ body, endpoint }));\n  }\n}\n","import { C } from \"./Constants\";\nimport { Api } from \"./Api\";\n\ninterface IPointer {\n  [key: string]: string;\n}\n\nexport class Manage extends Api {\n  constructor(uid: string) {\n    super(uid);\n  }\n\n  protected recoverEmail() {\n    if (this.ORM === C.ORM_DRIVERS) {\n      return new Promise<boolean>((resolve, reject) => {\n        this.fetch({\n          body: this.serialize(this),\n          endpoint:\n            C.API_ENDPOINT_RECOVER_EMAIL + this.parseQuery({ table: this.ORM }),\n          method: \"POST\",\n        })\n          .then(() => resolve(true))\n          .catch((error) => reject(error));\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n\n  protected auth<T>() {\n    if (this.ORM === C.ORM_ADMINS || this.ORM === C.ORM_DRIVERS) {\n      return new Promise<T>((resolve, reject) => {\n        this.fetch({\n          body: this.serialize(this),\n          endpoint: C.API_ENDPOINT_AUTH + this.parseQuery({ table: this.ORM }),\n          method: \"POST\",\n        })\n          .then((dto) => resolve(this.deserialize<T>(dto)))\n          .catch((error) => reject(error));\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n\n  protected post<T>() {\n    return new Promise<T>((resolve, reject) => {\n      this.fetch({\n        body: this.serialize(this),\n        endpoint: C.API_ENDPOINT_POST + this.parseQuery({ table: this.ORM }),\n        method: \"POST\",\n      })\n        .then((dto) => resolve(this.deserialize<T>(dto)))\n        .catch((error) => reject(error));\n    });\n  }\n\n  protected put<T>(pointer: IPointer) {\n    return new Promise<T>((resolve, reject) => {\n      this.fetch({\n        body: this.serialize(this),\n        endpoint:\n          C.API_ENDPOINT_PUT + this.parseQuery({ ...pointer, table: this.ORM }),\n        method: \"PUT\",\n      })\n        .then((dto) => resolve(this.deserialize<T>(dto)))\n        .catch((error) => reject(error));\n    });\n  }\n\n  get<T>(pointer: IPointer) {\n    return new Promise<T>((resolve, reject) => {\n      this.fetch({\n        endpoint:\n          C.API_ENDPOINT_GET + this.parseQuery({ ...pointer, table: this.ORM }),\n        method: \"GET\",\n      })\n        .then((dto) => resolve(this.deserialize<T>(dto)))\n        .catch((error) => reject(error));\n    });\n  }\n\n  delete(pointer: IPointer) {\n    return new Promise<boolean>((resolve, reject) => {\n      this.fetch({\n        endpoint:\n          C.API_ENDPOINT_DELETE +\n          this.parseQuery({ ...pointer, table: this.ORM }),\n        method: \"DELETE\",\n      })\n        .then(() => resolve(true))\n        .catch((error) => reject(error));\n    });\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface IAdminProps {\n  uid: string;\n  name: string;\n  password: string;\n  state: C.ADMIN_STATE_ONLINE | C.ADMIN_STATE_OFFLINE;\n}\n\nexport class Admin extends Manage {\n  private name: IAdminProps[\"name\"];\n  private password: IAdminProps[\"password\"];\n  private state: IAdminProps[\"state\"];\n\n  constructor({ name, password, uid }: Partial<IAdminProps> = {}) {\n    super(uid);\n    this.name = name;\n    this.password = password;\n    this.ORM = C.ORM_ADMINS;\n  }\n\n  modify({ name, password, state }: Partial<IAdminProps> = {}) {\n    this.name = name || this.name;\n    this.state = state || this.state;\n    this.password = password || this.password;\n    return this.put<Admin>({ name: this.name });\n  }\n\n  register() {\n    return this.post<Admin>();\n  }\n\n  login() {\n    return new Promise((resolve, reject) => {\n      this.auth<Admin>()\n        .then((admin) => resolve(admin.modify({ state: C.ADMIN_STATE_ONLINE })))\n        .catch((error) => reject(error));\n    });\n  }\n\n  logout() {\n    this.state = C.ADMIN_STATE_OFFLINE;\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface IDriverProps {\n  uid: string;\n  name: string;\n  email: string;\n  password: string;\n  state: C.DRIVER_STATE_ACTIVE | C.DRIVER_STATE_BANNED;\n}\n\nexport class Driver extends Manage {\n  name: IDriverProps[\"name\"];\n  email: IDriverProps[\"email\"];\n  password: IDriverProps[\"password\"];\n  state: IDriverProps[\"state\"];\n\n  constructor({ name, email, password, uid }: Partial<IDriverProps> = {}) {\n    super(uid);\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.state = C.DRIVER_STATE_ACTIVE;\n    this.ORM = C.ORM_DRIVERS;\n  }\n\n  modify({ name, email, password, state }: Partial<IDriverProps> = {}) {\n    this.name = name || this.name;\n    this.email = email || this.email;\n    this.state = state || this.state;\n    this.password = password || this.password;\n    return this.put<Driver>({ email: this.email });\n  }\n\n  register() {\n    return this.post<Driver>();\n  }\n\n  login() {\n    return this.auth<Driver>();\n  }\n\n  recover() {\n    return this.recoverEmail();\n  }\n\n  logout() {}\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface ISpotProps {\n  uid: string;\n  type: C.SPOT_TYPE_STANDARD;\n  state: C.SPOT_STATE_OPENED | C.SPOT_STATE_RESERVED | C.SPOT_STATE_OCCUPIED;\n}\ninterface ILotProps {\n  uid: string;\n  name: string;\n  coordinate: string;\n  capacity: number;\n  spots: ISpotProps[];\n  state: C.LOT_STATE_OPENED | C.LOT_STATE_CLOSED;\n}\nexport class Lot extends Manage {\n  name: ILotProps[\"name\"];\n  state: ILotProps[\"state\"];\n  spots: ILotProps[\"spots\"];\n  coordinate: ILotProps[\"coordinate\"];\n\n  constructor({ name, coordinate, capacity, uid }: Partial<ILotProps> = {}) {\n    super(uid);\n    this.name = name;\n    this.coordinate = coordinate;\n    this.state = C.LOT_STATE_OPENED;\n    this.ORM = C.ORM_LOTS;\n    this.spots = this._instSpots({ capacity });\n  }\n\n  modify({ name, coordinate, state, spots }: Partial<ILotProps> = {}) {\n    this.coordinate = coordinate || this.coordinate;\n    this.name = name || this.name;\n    this.state = state || this.state;\n    this.spots = spots || this.spots;\n    return this.put<Lot>({ uid: this.uid });\n  }\n\n  register() {\n    return this.post<Lot>();\n  }\n\n  getCapacity() {\n    return this.spots.length;\n  }\n\n  getSpot({ uid }) {\n    return this.spots.filter((spot) => spot.uid === uid)[0];\n  }\n\n  openSpot({ uid }) {\n    for (const spot of this.spots) {\n      if (spot.uid === uid) {\n        spot.state = C.SPOT_STATE_OPENED;\n        break;\n      }\n    }\n    return this.modify();\n  }\n\n  reserveSpot({ uid }) {\n    for (const spot of this.spots) {\n      if (spot.uid === uid) {\n        spot.state = C.SPOT_STATE_RESERVED;\n        break;\n      }\n    }\n    return this.modify();\n  }\n\n  occupySpot({ uid }) {\n    for (const spot of this.spots) {\n      if (spot.uid === uid) {\n        spot.state = C.SPOT_STATE_OCCUPIED;\n        break;\n      }\n    }\n    return this.modify();\n  }\n\n  occupyRandomSpot() {\n    // TODO:\n    // technical debt implement a proper check in base on request object\n    for (const spot of this.spots) {\n      if (spot.state === C.SPOT_STATE_OPENED) {\n        spot.state = C.SPOT_STATE_OCCUPIED;\n        break;\n      }\n    }\n    return this.modify();\n  }\n\n  _instSpots({ capacity }) {\n    let list: ISpotProps[] = [];\n    for (let i = 0; i < capacity; i++) {\n      list.push({\n        uid: Math.random().toString(16).slice(2),\n        type: C.SPOT_TYPE_STANDARD,\n        state: C.SPOT_STATE_OPENED,\n      });\n    }\n    return list;\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface IPaymentProps {\n  uid: string;\n  driverUID: string;\n  name: string;\n  ccn: string;\n  ccv: string;\n  exp: string;\n  annotation: C.PAYMENT_ANNOTATION_CREDIT | C.PAYMENT_ANNOTATION_DEBIT;\n  state:\n    | C.PAYMENT_ACTIVE\n    | C.PAYMENT_PROCESSING\n    | C.PAYMENT_SUCCESSFUL\n    | C.PAYMENT_DECLINED;\n}\n\nexport class Payment extends Manage {\n  driverUID: IPaymentProps[\"driverUID\"];\n  name: IPaymentProps[\"name\"];\n  ccn: IPaymentProps[\"ccn\"];\n  ccv: IPaymentProps[\"ccv\"];\n  exp: IPaymentProps[\"exp\"];\n  state: IPaymentProps[\"state\"];\n  annotation: IPaymentProps[\"annotation\"];\n\n  constructor({\n    driverUID,\n    name,\n    ccn,\n    ccv,\n    exp,\n    uid,\n  }: Partial<IPaymentProps> = {}) {\n    super(uid);\n    this.driverUID = driverUID;\n    this.name = name;\n    this.ccn = ccn;\n    this.ccv = ccv;\n    this.exp = new Date(exp).toString();\n    this.state = C.PAYMENT_ACTIVE;\n    this.ORM = C.ORM_PAYMENTS;\n  }\n\n  modify({ name, ccn, ccv, exp }: Partial<IPaymentProps> = {}) {\n    this.name = name || this.name;\n    this.ccn = ccn || this.ccn;\n    this.ccv = ccv || this.ccv;\n    this.exp = exp || this.exp;\n    return this.put<Payment>({ uid: this.uid });\n  }\n\n  register() {\n    return this.post<Payment>();\n  }\n\n  debit() {\n    this.state = C.PAYMENT_PROCESSING;\n    this.annotation = C.PAYMENT_ANNOTATION_DEBIT;\n  }\n\n  credit() {\n    this.state = C.PAYMENT_PROCESSING;\n    this.annotation = C.PAYMENT_ANNOTATION_CREDIT;\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\nimport { Lot } from \"./Lot\";\nimport { Payment } from \"./Payment\";\nimport { Driver } from \"./Driver\";\n\ninterface IRequestProps {\n  uid: string;\n  start: string;\n  end: string;\n  lotUID: string;\n  paymentUID: string;\n  spotType: C.SPOT_TYPE_STANDARD;\n  state:\n    | C.REQUEST_PENDING\n    | C.REQUEST_ACCEPTED\n    | C.REQUEST_REJECTED\n    | C.REQUEST_USED\n    | C.REQUEST_EXPIRED;\n}\n\nexport class Request extends Manage {\n  private start: IRequestProps[\"start\"];\n  private end: IRequestProps[\"end\"];\n  private state: IRequestProps[\"state\"];\n  private spotType: IRequestProps[\"spotType\"];\n  private lotUID: IRequestProps[\"lotUID\"];\n  private paymentUID: IRequestProps[\"paymentUID\"];\n\n  constructor({\n    lotUID,\n    paymentUID,\n    start,\n    end,\n    spotType,\n    uid,\n  }: Partial<IRequestProps> = {}) {\n    super(uid);\n    this.lotUID = lotUID;\n    this.paymentUID = paymentUID;\n    this.state = C.REQUEST_PENDING;\n    this.spotType = spotType || C.SPOT_TYPE_STANDARD;\n    this.ORM = C.ORM_REQUESTS;\n    this.start = new Date(start).toString();\n    this.end = new Date(end).toString();\n  }\n\n  modify({ state }: Partial<IRequestProps> = {}) {\n    this.state = state || this.state;\n    return this.put<Request>({ uid: this.uid });\n  }\n\n  send() {\n    return this.post<Request>();\n  }\n\n  accept() {\n    return this.modify({ state: C.REQUEST_ACCEPTED }).then((res) => res);\n  }\n\n  reject() {\n    return this.modify({ state: C.REQUEST_REJECTED }).then((res) => res);\n  }\n\n  automate() {\n    return Promise.resolve(\"some thing\");\n  }\n\n  cost() {\n    return (\n      (new Date(this.end).getTime() - new Date(this.start).getTime()) *\n      C.COST_BY_MILLISECONDS\n    );\n  }\n\n  checkIn() {\n    this.state = C.REQUEST_USED;\n    return new Promise((resolve, reject) => {\n      this.modify()\n        .then((request) => {\n          new Lot()\n            .get<Lot>({ uid: request.lotUID })\n            .then((lot) => resolve(lot.occupyRandomSpot()));\n        })\n        .catch((error) => reject(error));\n    });\n  }\n\n  toString() {\n    return new Promise<string>((resolve) => {\n      Promise.all([\n        new Payment()\n          .get<Payment>({ uid: this.paymentUID })\n          .then((payment) =>\n            new Driver()\n              .get<Driver>({ uid: payment.driverUID })\n              .then((driver) => driver)\n          ),\n        new Lot().get<Lot>({ uid: this.lotUID }).then((lot) => lot),\n      ])\n        .then(([driver, lot]) => {\n          resolve(\n            `${driver.name.toUpperCase()} - Requested to Park at ${\n              lot.name\n            } (${this._formatDate(new Date(this.start))} - ${this._formatDate(\n              new Date(this.end)\n            )})`\n          );\n        })\n        .catch(() => resolve(\"Error!! request object invalid\"));\n    });\n  }\n\n  _formatDate(date) {\n    const padTo2Digits = (num) => num.toString().padStart(2, \"0\");\n    return (\n      [\n        date.getFullYear(),\n        padTo2Digits(date.getMonth() + 1),\n        padTo2Digits(date.getDate()),\n      ].join(\"-\") +\n      \" \" +\n      [\n        padTo2Digits(date.getHours()),\n        padTo2Digits(date.getMinutes()),\n        // padTo2Digits(date.getSeconds()),\n      ].join(\":\")\n    );\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface IMessageProps {\n  uid: string;\n  toUserUID: string;\n  toUserUIDS: string[];\n  fromUserUID: string;\n  replyToRef: string;\n  title: string;\n  content: string;\n  state: C.MESSAGE_STATE_DELIVERED | C.MESSAGE_STATE_READ;\n}\n\nexport class Message extends Manage {\n  toUserUID: IMessageProps[\"toUserUID\"];\n  fromUserUID: IMessageProps[\"fromUserUID\"];\n  replyToRef: IMessageProps[\"replyToRef\"];\n  title: IMessageProps[\"title\"];\n  content: IMessageProps[\"content\"];\n  state: IMessageProps[\"state\"];\n\n  constructor({\n    toUserUID,\n    toUserUIDS,\n    fromUserUID,\n    title,\n    content,\n    replyToRef,\n    uid,\n  }: Partial<IMessageProps> = {}) {\n    super(uid);\n    this.mem = toUserUIDS;\n    this.toUserUID = toUserUID;\n    this.fromUserUID = fromUserUID;\n    this.replyToRef = replyToRef;\n    this.title = title;\n    this.content = content;\n    this.ORM = C.ORM_MESSAGES;\n    this.state = C.MESSAGE_STATE_DELIVERED;\n  }\n\n  modify({ state }: Partial<IMessageProps> = {}) {\n    this.state = state || this.state;\n    return this.put<Message>({ uid: this.uid });\n  }\n\n  send() {\n    let result = [];\n    for (let i = 0; i < this.mem.length; i++) {\n      result.push(\n        new Message({\n          toUserUID: this.mem[i],\n          fromUserUID: this.fromUserUID,\n          title: this.title,\n          content: this.content,\n          replyToRef: this.replyToRef,\n        }).post<Message>()\n      );\n    }\n    return Promise.all(result);\n  }\n}\n","import { C } from \"./Constants\";\nimport { Api, IApiProps } from \"./Api\";\nimport { Admin } from \"./Admin\";\nimport { Driver } from \"./Driver\";\nimport { Lot } from \"./Lot\";\nimport { Message } from \"./Message\";\nimport { Request } from \"./Request\";\nimport { Payment } from \"./Payment\";\nimport { Notification } from \"./Notification\";\n\nconst CLS = {\n  [C.ORM_ADMINS]: Admin,\n  [C.ORM_DRIVERS]: Driver,\n  [C.ORM_LOTS]: Lot,\n  [C.ORM_MESSAGES]: Message,\n  [C.ORM_NOTIFICATIONS]: Notification,\n  [C.ORM_REQUESTS]: Request,\n  [C.ORM_PAYMENTS]: Payment,\n};\n\nexport class Collection extends Api {\n  constructor(dbTable: IApiProps[\"ORM\"]) {\n    super();\n    this.ORM = dbTable;\n    this.constructor = CLS[dbTable];\n  }\n\n  then<T>(func: (arg: T[]) => T[]) {\n    return new Promise<T[]>((resolve, reject) => {\n      this.fetch({\n        endpoint: C.API_ENDPOINT_GET_ALL + this.parseQuery({ table: this.ORM }),\n        method: \"GET\",\n      })\n        .then((dtoList) => this.deserializeArray<T>(dtoList))\n        .then((list) => resolve(func(list)))\n        .catch((error) => reject(error));\n    });\n  }\n}\n","import { C } from \"./Constants\";\nimport { Manage } from \"./Manage\";\n\ninterface INotificationProps {\n  uid: string;\n  toUserUID: string;\n  content: string;\n  state: C.NOTIFICATION_STATE_DISPATCHED | C.NOTIFICATION_STATE_RECEIVED;\n}\n\nexport class Notification extends Manage {\n  private toUserUID: INotificationProps[\"toUserUID\"];\n  private content: INotificationProps[\"content\"];\n  private state: INotificationProps[\"state\"];\n\n  constructor({ toUserUID, content, uid }: Partial<INotificationProps> = {}) {\n    super(uid);\n    this.toUserUID = toUserUID;\n    this.content = content;\n    this.ORM = C.ORM_NOTIFICATIONS;\n  }\n\n  modify({ state }: Partial<INotificationProps> = {}) {\n    this.state = state || this.state;\n    return this.put<Notification>({ uid: this.uid });\n  }\n\n  send() {\n    this.state = C.NOTIFICATION_STATE_DISPATCHED;\n    return this.post<Notification>();\n  }\n}\n"],"names":["C","M","constructor","db","fetch","DB_FILE_PATH","then","res","json","data","this","catch","error","console","backend","body","endpoint","Promise","resolve","reject","idx","setInterval","clearInterval","pointer","pathname","searchParams","URL","dbTable","get","key","value","API_ENDPOINT_GET_ALL","API_ENDPOINT_GET","filter","entry","API_ENDPOINT_POST","push","JSON","parse","API_ENDPOINT_PUT","map","_extends","API_ENDPOINT_DELETE","API_ENDPOINT_AUTH","password","name","email","API_ENDPOINT_RECOVER_EMAIL","Reflect","factory","root","global","self","Function","exporter","makeExporter","target","previous","Object","defineProperty","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","call","undefined","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","length","result","done","throw","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","i","clear","getKey","getValue","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","Uint8Array","crypto","getRandomValues","msCrypto","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasMetadata","MetadataKey","OrdinaryHasOwnMetadata","parent","OrdinaryGetPrototypeOf","IsNull","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryMetadataKeys","ownKeys","OrdinaryOwnMetadataKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","ToPropertyKey","argument","input","PreferredType","exoticToPrim","hint","valueOf","toString_1","OrdinaryToPrimitive","ToPrimitive","ToString","IsArray","isArray","IsConstructor","V","func","f","proto","prototypeProto","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","__decorate","desc","d","c","arguments","r","getOwnPropertyDescriptor","decorate","__metadata","v","metadata","exports","AccessType","METADATA_JSON_PROPERTIES_NAME","METADATA_JSON_IGNORE_NAME","getJsonPropertyDecoratorMetadata","getMetadata","JSON_PROPERTY_DECORATOR_NAME","getKeyName","isSimpleType","typeName","Constants","STRING_TYPE","NUMBER_TYPE","BOOLEAN_TYPE","DATE_TYPE","STRING_TYPE_LOWERCASE","NUMBER_TYPE_LOWERCASE","BOOLEAN_TYPE_LOWERCASE","DATE_TYPE_LOWERCASE","getTypeNameFromInstance","instance","instr","i1","i2","substring","trim","extractClassname","getType","OBJECT_TYPE","OBJECT_TYPE_LOWERCASE","ARRAY_TYPE","ARRAY_TYPE_LOWERCASE","FROM_ARRAY","getCachedType","type","cache","getJsonObjectMapperCacheKey","CacheKey","functionImpl","JsonConverstionError","message","stack","Error","DeserializeSimpleType","instanceKey","jsonKey","DeserializeDateType","Date","DeserializeArrayType","jsonObject","jsonArraySize","conversionFunctionsList","arrayInstance","conversionFunctions","typeInstance","functionName","DeserializeComplexType","objectInstance","objectKeys","concat","item","hasMetadata","forEach","required","access","BOTH","WRITE_ONLY","jsonKeyName","deserializer","getOrCreateDeserializer","deserialize","isArrayType","struct","getTypeName","deserializers","SerializeArrayType","parentStructure","instanceStructure","instanceIndex","furtherSerializationStructures","visited","serializeFunctions","serializers","id","uniqueId","parentIndex","createArrayOfSerializationStructures","serializationStructuresObject","serializationStructures","mergeObjectOrArrayValuesAndCopyToParents","mergeObjectOrArrayValues","pop","mergedValue","join","instanceValuesStack","serializeArray","SerializeObjectType","keyInstance","READ_ONLY","serializer","getOrCreateSerializer","SerializeSimpleType","serialize","DateSerializer","getTime","StringSerializer","stringify","NumberSerializer","BooleanSerializer","now","ObjectMapper","deserializeArray","instances","runDeserialization","dtoInstance","conversionFunctionStructures","converstionFunctionsArray","conversionFunctionStructure","structure","instanceStruct","parentStruct","moreStructures","JsonProperty","getPropertyDecorator","getJsonPropertyDecorator","JsonIgnore","defineMetadata","Api","uid","mem","ORM","slice","dtoList","dto","cls","parseQuery","arg","URLSearchParams","Manage","super","recoverEmail","ORM_DRIVERS","auth","ORM_ADMINS","post","put","Admin","state","modify","register","login","admin","ADMIN_STATE_ONLINE","logout","ADMIN_STATE_OFFLINE","Driver","DRIVER_STATE_ACTIVE","recover","Lot","coordinate","capacity","spots","LOT_STATE_OPENED","ORM_LOTS","_instSpots","getCapacity","getSpot","spot","openSpot","SPOT_STATE_OPENED","reserveSpot","SPOT_STATE_RESERVED","occupySpot","SPOT_STATE_OCCUPIED","occupyRandomSpot","list","SPOT_TYPE_STANDARD","Payment","driverUID","ccn","ccv","exp","annotation","PAYMENT_ACTIVE","ORM_PAYMENTS","debit","PAYMENT_PROCESSING","PAYMENT_ANNOTATION_DEBIT","credit","PAYMENT_ANNOTATION_CREDIT","Request","lotUID","paymentUID","start","end","spotType","REQUEST_PENDING","ORM_REQUESTS","send","accept","REQUEST_ACCEPTED","REQUEST_REJECTED","automate","cost","COST_BY_MILLISECONDS","checkIn","REQUEST_USED","request","lot","all","payment","driver","toUpperCase","_formatDate","date","padTo2Digits","num","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","Message","toUserUID","toUserUIDS","fromUserUID","title","content","replyToRef","ORM_MESSAGES","MESSAGE_STATE_DELIVERED","CLS","ORM_NOTIFICATIONS","NOTIFICATION_STATE_DISPATCHED","Collection"],"mappings":"AAAYA,IAAAA,mNAAZ,SAAYA,GACVA,EAAAA,EAAA,qBAAA,SAAA,uBAEAA,EAAA,mBAAA,SACAA,EAAA,oBAAA,UAEAA,EAAA,oBAAA,SACAA,EAAA,oBAAA,SAEAA,EAAA,mBAAA,WAEAA,EAAA,kBAAA,SACAA,EAAA,oBAAA,WACAA,EAAA,oBAAA,WAEAA,EAAA,iBAAA,SACAA,EAAA,iBAAA,SAEAA,EAAA,0BAAA,SACAA,EAAA,yBAAA,QAEAA,EAAA,eAAA,SACAA,EAAA,mBAAA,aACAA,EAAA,mBAAA,aACAA,EAAA,iBAAA,WAEAA,EAAA,gBAAA,UACAA,EAAA,iBAAA,WACAA,EAAA,iBAAA,WACAA,EAAA,aAAA,OACAA,EAAA,gBAAA,UAEAA,EAAA,wBAAA,YACAA,EAAA,mBAAA,OAEAA,EAAA,8BAAA,aACAA,EAAA,4BAAA,WAEAA,EAAA,SAAA,OACAA,EAAA,WAAA,SACAA,EAAA,YAAA,UACAA,EAAA,aAAA,WACAA,EAAA,aAAA,WACAA,EAAA,aAAA,WACAA,EAAA,kBAAA,gBAEAA,EAAA,aAAA,yBAEAA,EAAA,kBAAA,gBACAA,EAAA,2BAAA,yBACAA,EAAA,qBAAA,mBACAA,EAAA,iBAAA,eACAA,EAAA,iBAAA,eACAA,EAAA,kBAAA,gBACAA,EAAA,oBAAA,kBAtDF,CAAYA,IAAAA,EAuDX,KCsCYC,MAAAA,EAAI,IA3FjB,MAGEC,cAFAC,KAAAA,UAGEC,MAAMJ,EAAEK,cACLC,KAAMC,GAAQA,EAAIC,QAClBF,KAAMG,IACLC,KAAKP,GAAKM,IAEXE,MAAOC,GAAUC,QAAQD,MAAMA,IAGpCE,SAAQC,KAAEA,EAAFC,SAAQA,IACd,OAAWC,IAAAA,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAMC,YAAY,KACtB,GAAIX,KAAKP,GAAI,CACXmB,cAAcF,GACd,IAAIG,EAAU,GACd,MAAMC,SAAEA,EAAFC,aAAYA,GAAiB,IAAIC,IACrC,wBAA0BV,GAEtBW,EAAUF,EAAaG,IAAI,SACjC,IAAK,MAAOC,EAAKC,KAAUL,EACd,SAAPI,IACFN,EAAU,CAACM,EAAKC,IAIpB,OAAQN,EAAW,KACjB,KAAKxB,EAAE+B,qBACLb,EAAQR,KAAKP,GAAGwB,IAChB,MAEF,KAAK3B,EAAEgC,iBACLd,EACER,KAAKP,GAAGwB,GAASM,OACdC,GAAUA,EAAMX,EAAQ,MAAQA,EAAQ,IACzC,IAEJ,MAEF,KAAKvB,EAAEmC,kBACLzB,KAAKP,GAAGwB,GAASS,KAAKC,KAAKC,MAAMvB,IACjCG,EAAQmB,KAAKC,MAAMvB,IACnB,MAEF,KAAKf,EAAEuC,iBACL,IAAIhC,EACJG,KAAKP,GAAGwB,GAAWjB,KAAKP,GAAGwB,GAASa,IAAKN,GACnCA,EAAMX,EAAQ,MAAQA,EAAQ,IAChChB,EAAGkC,EAAA,GAAQP,EAAUG,KAAKC,MAAMvB,IACzBR,GAEA2B,GAGXhB,EAAQX,GACR,MAEF,KAAKP,EAAE0C,oBACLhC,KAAKP,GAAGwB,GAAWjB,KAAKP,GAAGwB,GAASM,OACjCC,GAAUA,EAAMX,EAAQ,MAAQA,EAAQ,IAE3CL,EAAQ,wBACR,MAEF,KAAKlB,EAAE2C,kBACLzB,EACER,KAAKP,GAAGwB,GAASM,OACdC,GACCA,EAAMU,WAAaP,KAAKC,MAAMvB,GAAM6B,WACnCV,EAAMW,OAASR,KAAKC,MAAMvB,GAAM8B,MAC9BX,EAAMY,OAASZ,EAAMY,QAAUT,KAAKC,MAAMvB,GAAM+B,QACrD,IAEJ,MAEF,KAAK9C,EAAE+C,2BACL7B,EAAQ,wBACR,MAEF,QACEC,EAAQ,wBAAuBK,QAIpC,aC1ELwB,oJACJ,SAAWA,IAGP,SAAWC,GACP,IAAIC,EAAyB,iBAAXC,EAAsBA,EACpB,iBAATC,KAAoBA,KACP,iBAAT1C,KAAoBA,KACvB2C,SAAS,eAATA,GACRC,EAAWC,EAAaP,GAQ5B,SAASO,EAAaC,EAAQC,GAC1B,OAAO,SAAU5B,EAAKC,GACS,mBAAhB0B,EAAO3B,IACd6B,OAAOC,eAAeH,EAAQ3B,EAAK,CAAE+B,cAAc,EAAMC,UAAU,EAAM/B,MAAOA,IAEhF2B,GACAA,EAAS5B,EAAKC,SAbE,IAAjBoB,EAAKF,QACZE,EAAKF,QAAUA,EAGfM,EAAWC,EAAaL,EAAKF,QAASM,GAY3C,SAAUA,GACT,IAAIQ,EAASJ,OAAOK,UAAUC,eAE1BC,EAAmC,mBAAXC,OACxBC,EAAoBF,QAAgD,IAAvBC,OAAOE,YAA8BF,OAAOE,YAAc,gBACvGC,EAAiBJ,QAA6C,IAApBC,OAAOI,SAA2BJ,OAAOI,SAAW,aAC9FC,EAA0C,mBAAlBb,OAAOc,OAC/BC,EAAgB,CAAEC,UAAW,cAAgBC,MAC7CC,GAAaL,IAAmBE,EAChCI,EAAU,CAEVL,OAAQD,EACF,WAAc,OAAOO,EAAepB,OAAOc,OAAO,QAClDC,EACI,WAAc,OAAOK,EAAe,CAAEJ,UAAW,QACjD,WAAc,OAAOI,EAAe,KAC9CC,IAAKH,EACC,SAAUpC,EAAKX,GAAO,OAAOiC,EAAOkB,KAAKxC,EAAKX,IAC9C,SAAUW,EAAKX,GAAO,OAAOA,KAAOW,GAC1CZ,IAAKgD,EACC,SAAUpC,EAAKX,GAAO,OAAOiC,EAAOkB,KAAKxC,EAAKX,GAAOW,EAAIX,QAAOoD,GAChE,SAAUzC,EAAKX,GAAO,OAAOW,EAAIX,KAGvCqD,EAAoBxB,OAAOyB,eAAe9B,UAC1C+B,EAAiC,iBAAZC,SAAwBA,QAAQC,KAA4D,SAArDD,QAAQC,IAAuC,kCAC3GC,EAAQH,GAA8B,mBAARI,KAAuD,mBAA1BA,IAAIzB,UAAU0B,QAk0B7E,WACI,IAAIC,EAAgB,GAChBC,EAAgB,GAChBC,EAA6B,WAC7B,SAASA,EAAYC,EAAMC,EAAQC,GAC/BrF,KAAKsF,OAAS,EACdtF,KAAKuF,MAAQJ,EACbnF,KAAKwF,QAAUJ,EACfpF,KAAKyF,UAAYJ,EAoCrB,OAlCAH,EAAY7B,UAAU,cAAgB,WAAc,OAAOrD,MAC3DkF,EAAY7B,UAAUM,GAAkB,WAAc,OAAO3D,MAC7DkF,EAAY7B,UAAUqC,KAAO,WACzB,IAAIC,EAAQ3F,KAAKsF,OACjB,GAAIK,GAAS,GAAKA,EAAQ3F,KAAKuF,MAAMK,OAAQ,CACzC,IAAIC,EAAS7F,KAAKyF,UAAUzF,KAAKuF,MAAMI,GAAQ3F,KAAKwF,QAAQG,IAS5D,OARIA,EAAQ,GAAK3F,KAAKuF,MAAMK,QACxB5F,KAAKsF,QAAU,EACftF,KAAKuF,MAAQN,EACbjF,KAAKwF,QAAUP,GAGfjF,KAAKsF,SAEF,CAAElE,MAAOyE,EAAQC,MAAM,GAElC,MAAO,CAAE1E,WAAOmD,EAAWuB,MAAM,IAErCZ,EAAY7B,UAAU0C,MAAQ,SAAU7F,GAMpC,MALIF,KAAKsF,QAAU,IACftF,KAAKsF,QAAU,EACftF,KAAKuF,MAAQN,EACbjF,KAAKwF,QAAUP,GAEb/E,GAEVgF,EAAY7B,UAAU2C,OAAS,SAAU5E,GAMrC,OALIpB,KAAKsF,QAAU,IACftF,KAAKsF,QAAU,EACftF,KAAKuF,MAAQN,EACbjF,KAAKwF,QAAUP,GAEZ,CAAE7D,MAAOA,EAAO0E,MAAM,IAE1BZ,EAzCI,GA2Cf,OAAsB,WAClB,SAASJ,IACL9E,KAAKuF,MAAQ,GACbvF,KAAKwF,QAAU,GACfxF,KAAKiG,UAAYjB,EACjBhF,KAAKkG,aAAe,EAyDxB,OAvDAlD,OAAOC,eAAe6B,EAAIzB,UAAW,OAAQ,CACzCnC,IAAK,WAAc,OAAOlB,KAAKuF,MAAMK,QACrCO,YAAY,EACZjD,cAAc,IAElB4B,EAAIzB,UAAUgB,IAAM,SAAUlD,GAAO,OAAOnB,KAAKoG,MAAMjF,GAAgB,IAAU,GACjF2D,EAAIzB,UAAUnC,IAAM,SAAUC,GAC1B,IAAIwE,EAAQ3F,KAAKoG,MAAMjF,GAAgB,GACvC,OAAOwE,GAAS,EAAI3F,KAAKwF,QAAQG,QAASpB,GAE9CO,EAAIzB,UAAUgD,IAAM,SAAUlF,EAAKC,GAC/B,IAAIuE,EAAQ3F,KAAKoG,MAAMjF,GAAgB,GAEvC,OADAnB,KAAKwF,QAAQG,GAASvE,EACfpB,MAEX8E,EAAIzB,UAAUiD,OAAS,SAAUnF,GAC7B,IAAIwE,EAAQ3F,KAAKoG,MAAMjF,GAAgB,GACvC,GAAIwE,GAAS,EAAG,CAEZ,IADA,IAAIY,EAAOvG,KAAKuF,MAAMK,OACbY,EAAIb,EAAQ,EAAGa,EAAID,EAAMC,IAC9BxG,KAAKuF,MAAMiB,EAAI,GAAKxG,KAAKuF,MAAMiB,GAC/BxG,KAAKwF,QAAQgB,EAAI,GAAKxG,KAAKwF,QAAQgB,GAQvC,OANAxG,KAAKuF,MAAMK,SACX5F,KAAKwF,QAAQI,SACTzE,IAAQnB,KAAKiG,YACbjG,KAAKiG,UAAYjB,EACjBhF,KAAKkG,aAAe,IAEjB,EAEX,OAAO,GAEXpB,EAAIzB,UAAUoD,MAAQ,WAClBzG,KAAKuF,MAAMK,OAAS,EACpB5F,KAAKwF,QAAQI,OAAS,EACtB5F,KAAKiG,UAAYjB,EACjBhF,KAAKkG,aAAe,GAExBpB,EAAIzB,UAAU8B,KAAO,WAAc,OAAO,IAAID,EAAYlF,KAAKuF,MAAOvF,KAAKwF,QAASkB,IACpF5B,EAAIzB,UAAU+B,OAAS,WAAc,OAAO,IAAIF,EAAYlF,KAAKuF,MAAOvF,KAAKwF,QAASmB,IACtF7B,EAAIzB,UAAU0B,QAAU,WAAc,OAAO,IAAIG,EAAYlF,KAAKuF,MAAOvF,KAAKwF,QAASoB,IACvF9B,EAAIzB,UAAU,cAAgB,WAAc,OAAOrD,KAAK+E,WACxDD,EAAIzB,UAAUM,GAAkB,WAAc,OAAO3D,KAAK+E,WAC1DD,EAAIzB,UAAU+C,MAAQ,SAAUjF,EAAK0F,GASjC,OARI7G,KAAKiG,YAAc9E,IACnBnB,KAAKkG,YAAclG,KAAKuF,MAAMuB,QAAQ9G,KAAKiG,UAAY9E,IAEvDnB,KAAKkG,YAAc,GAAKW,IACxB7G,KAAKkG,YAAclG,KAAKuF,MAAMK,OAC9B5F,KAAKuF,MAAM7D,KAAKP,GAChBnB,KAAKwF,QAAQ9D,UAAK6C,IAEfvE,KAAKkG,aAETpB,KAEX,SAAS4B,EAAOvF,EAAK4F,GACjB,OAAO5F,EAEX,SAASwF,EAASI,EAAG3F,GACjB,OAAOA,EAEX,SAASwF,EAASzF,EAAKC,GACnB,MAAO,CAACD,EAAKC,IAv7BuF4F,GAANlC,IAClGmC,EAAQvC,GAA8B,mBAARwC,KAAuD,mBAA1BA,IAAI7D,UAAU0B,QA27BnD,WAClB,SAASmC,IACLlH,KAAKmH,KAAO,IAAItC,EAgBpB,OAdA7B,OAAOC,eAAeiE,EAAI7D,UAAW,OAAQ,CACzCnC,IAAK,WAAc,OAAOlB,KAAKmH,KAAKZ,MACpCJ,YAAY,EACZjD,cAAc,IAElBgE,EAAI7D,UAAUgB,IAAM,SAAUjD,GAAS,OAAOpB,KAAKmH,KAAK9C,IAAIjD,IAC5D8F,EAAI7D,UAAU+D,IAAM,SAAUhG,GAAS,OAAOpB,KAAKmH,KAAKd,IAAIjF,EAAOA,GAAQpB,MAC3EkH,EAAI7D,UAAUiD,OAAS,SAAUlF,GAAS,OAAOpB,KAAKmH,KAAKb,OAAOlF,IAClE8F,EAAI7D,UAAUoD,MAAQ,WAAczG,KAAKmH,KAAKV,SAC9CS,EAAI7D,UAAU8B,KAAO,WAAc,OAAOnF,KAAKmH,KAAKhC,QACpD+B,EAAI7D,UAAU+B,OAAS,WAAc,OAAOpF,KAAKmH,KAAK/B,UACtD8B,EAAI7D,UAAU0B,QAAU,WAAc,OAAO/E,KAAKmH,KAAKpC,WACvDmC,EAAI7D,UAAU,cAAgB,WAAc,OAAOrD,KAAKmF,QACxD+B,EAAI7D,UAAUM,GAAkB,WAAc,OAAO3D,KAAKmF,QACnD+B,KA78BuFA,IAIlGG,EAAW,IAHC3C,GAAkC,mBAAZ4C,QAg9BtC,WACI,IACInC,EAAOhB,EAAQL,SACfyD,EAAUC,IACd,OAAsB,WAClB,SAASF,IACLtH,KAAKyH,KAAOD,IAuBhB,OArBAF,EAAQjE,UAAUgB,IAAM,SAAUvB,GAC9B,IAAI4E,EAAQC,EAAwB7E,GAAmB,GACvD,YAAiByB,IAAVmD,GAAsBvD,EAAQE,IAAIqD,EAAO1H,KAAKyH,OAEzDH,EAAQjE,UAAUnC,IAAM,SAAU4B,GAC9B,IAAI4E,EAAQC,EAAwB7E,GAAmB,GACvD,YAAiByB,IAAVmD,EAAsBvD,EAAQjD,IAAIwG,EAAO1H,KAAKyH,WAAQlD,GAEjE+C,EAAQjE,UAAUgD,IAAM,SAAUvD,EAAQ1B,GAGtC,OAFYuG,EAAwB7E,GAAmB,GACjD9C,KAAKyH,MAAQrG,EACZpB,MAEXsH,EAAQjE,UAAUiD,OAAS,SAAUxD,GACjC,IAAI4E,EAAQC,EAAwB7E,GAAmB,GACvD,YAAiByB,IAAVmD,UAA6BA,EAAM1H,KAAKyH,OAEnDH,EAAQjE,UAAUoD,MAAQ,WAEtBzG,KAAKyH,KAAOD,KAETF,KAEX,SAASE,IACL,IAAIrG,EACJ,GACIA,EAAM,cAAgByG,UACnBzD,EAAQE,IAAIc,EAAMhE,IAEzB,OADAgE,EAAKhE,IAAO,EACLA,EAEX,SAASwG,EAAwB7E,EAAQgB,GACrC,IAAKV,EAAOkB,KAAKxB,EAAQyE,GAAU,CAC/B,IAAKzD,EACD,OACJd,OAAOC,eAAeH,EAAQyE,EAAS,CAAEnG,MAAO+C,EAAQL,WAE5D,OAAOhB,EAAOyE,GAElB,SAASM,EAAgBC,EAAQvB,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAQC,EACxBsB,EAAOtB,GAAqB,IAAhBuB,KAAKC,SAAkB,EACvC,OAAOF,EAYX,SAASF,IACL,IAXoBrB,EAWhBxG,GAXgBwG,EAnDR,GAoDc,mBAAf0B,WACe,oBAAXC,OACAA,OAAOC,gBAAgB,IAAIF,WAAW1B,IACzB,oBAAb6B,SACAA,SAASD,gBAAgB,IAAIF,WAAW1B,IAC5CsB,EAAgB,IAAII,WAAW1B,GAAOA,GAE1CsB,EAAgB,IAAI5D,MAAMsC,GAAOA,IAKxCxG,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,IAAVA,EAAK,GAAY,IAE3B,IADA,IAAI8F,EAAS,GACJwC,EAAS,EAAGA,EAnET,KAmE+BA,EAAQ,CAC/C,IAAIC,EAAOvI,EAAKsI,GACD,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,IAChCxC,GAAU,KACVyC,EAAO,KACPzC,GAAU,KACdA,GAAUyC,EAAKC,SAAS,IAAIC,cAEhC,OAAO3C,GA5hC0D4C,GAAVnB,SA6e/D,SAASoB,EAAuBC,EAAGC,EAAGC,GAClC,IAAIC,EAAiBzB,EAASnG,IAAIyH,GAClC,GAAII,EAAYD,GAAiB,CAC7B,IAAKD,EACD,OACJC,EAAiB,IAAIjE,EACrBwC,EAAShB,IAAIsC,EAAGG,GAEpB,IAAIE,EAAcF,EAAe5H,IAAI0H,GACrC,GAAIG,EAAYC,GAAc,CAC1B,IAAKH,EACD,OACJG,EAAc,IAAInE,EAClBiE,EAAezC,IAAIuC,EAAGI,GAE1B,OAAOA,EAIX,SAASC,EAAoBC,EAAaP,EAAGC,GAEzC,GADaO,EAAuBD,EAAaP,EAAGC,GAEhD,OAAO,EACX,IAAIQ,EAASC,EAAuBV,GACpC,OAAKW,EAAOF,IACDH,EAAoBC,EAAaE,EAAQR,GAKxD,SAASO,EAAuBD,EAAaP,EAAGC,GAC5C,IAAII,EAAcN,EAAuBC,EAAGC,GAAc,GAC1D,OAAIG,EAAYC,MAECA,EAAY3E,IAAI6E,GAIrC,SAASK,EAAoBL,EAAaP,EAAGC,GAEzC,GADaO,EAAuBD,EAAaP,EAAGC,GAEhD,OAAOY,EAAuBN,EAAaP,EAAGC,GAClD,IAAIQ,EAASC,EAAuBV,GACpC,OAAKW,EAAOF,QAAZ,EACWG,EAAoBL,EAAaE,EAAQR,GAKxD,SAASY,EAAuBN,EAAaP,EAAGC,GAC5C,IAAII,EAAcN,EAAuBC,EAAGC,GAAc,GAC1D,IAAIG,EAAYC,GAEhB,OAAOA,EAAY9H,IAAIgI,GAI3B,SAASO,EAA0BP,EAAaQ,EAAef,EAAGC,GAC5CF,EAAuBC,EAAGC,GAAc,GAC9CvC,IAAI6C,EAAaQ,GAIjC,SAASC,EAAqBhB,EAAGC,GAC7B,IAAIgB,EAAUC,EAAwBlB,EAAGC,GACrCQ,EAASC,EAAuBV,GACpC,GAAe,OAAXS,EACA,OAAOQ,EACX,IAAIE,EAAaH,EAAqBP,EAAQR,GAC9C,GAAIkB,EAAWlE,QAAU,EACrB,OAAOgE,EACX,GAAIA,EAAQhE,QAAU,EAClB,OAAOkE,EAGX,IAFA,IAAIzD,EAAM,IAAIY,EACV9B,EAAO,GACF4E,EAAK,EAAGC,EAAYJ,EAASG,EAAKC,EAAUpE,OAAQmE,IAE5C1D,EAAIhC,IADblD,EAAM6I,EAAUD,MAGhB1D,EAAIe,IAAIjG,GACRgE,EAAKzD,KAAKP,IAGlB,IAAK,IAAI8I,EAAK,EAAGC,EAAeJ,EAAYG,EAAKC,EAAatE,OAAQqE,IAAM,CACxE,IAAI9I,EACSkF,EAAIhC,IADblD,EAAM+I,EAAaD,MAGnB5D,EAAIe,IAAIjG,GACRgE,EAAKzD,KAAKP,IAGlB,OAAOgE,EAIX,SAAS0E,EAAwBlB,EAAGC,GAChC,IAAIzD,EAAO,GACP6D,EAAcN,EAAuBC,EAAGC,GAAc,GAC1D,GAAIG,EAAYC,GACZ,OAAO7D,EAIX,IAHA,IACIvB,EAkLR,SAAqBuG,GACjB,IAAIC,EAASC,EAAUF,EAAKxG,GAC5B,IAAK2G,EAAWF,GACZ,MAAM,IAAIG,UACd,IAAI3G,EAAWwG,EAAO9F,KAAK6F,GAC3B,IAAKK,EAAS5G,GACV,MAAM,IAAI2G,UACd,OAAO3G,EAzLQ6G,CADDzB,EAAY7D,QAEtBuF,EAAI,IACK,CACT,IAAIhF,EAAOiF,EAAa/G,GACxB,IAAK8B,EAED,OADAP,EAAKS,OAAS8E,EACPvF,EAEX,IAAIyF,EAA0BlF,EAsLhBtE,MArLd,IACI+D,EAAKuF,GAAKE,EAEd,MAAOC,GACH,IACIC,EAAclH,GAEV,QACJ,MAAMiH,GAGdH,KAKR,SAASK,EAAKC,GACV,GAAU,OAANA,EACA,OAAO,EACX,cAAeA,GACX,IAAK,YAAa,OAAO,EACzB,IAAK,UAAW,OAAO,EACvB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAa,OAANA,EAAa,EAAe,EAClD,QAAS,OAAO,GAKxB,SAASjC,EAAYiC,GACjB,YAAazG,IAANyG,EAIX,SAAS1B,EAAO0B,GACZ,OAAa,OAANA,EASX,SAASR,EAASQ,GACd,MAAoB,iBAANA,EAAuB,OAANA,EAA0B,mBAANA,EAsEvD,SAASC,EAAcC,GACnB,IAAI/J,EAjER,SAAqBgK,EAAOC,GACxB,OAAQL,EAAKI,IACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAAgB,OAAOA,EAEhC,IACIE,EAAehB,EAAUc,EAAO1H,GACpC,QAAqBc,IAAjB8G,EAA4B,CAC5B,IAAIxF,EAASwF,EAAa/G,KAAK6G,EAHW,UAI1C,GAAIX,EAAS3E,GACT,MAAM,IAAI0E,UACd,OAAO1E,EAEX,OAIJ,SAA6B8C,EAAG2C,GAExB,IAcIC,EAQI1F,EAtBJ2F,EAAa7C,EAAEJ,SACnB,GAAI+B,EAAWkB,KAENhB,EADD3E,EAAS2F,EAAWlH,KAAKqE,IAEzB,OAAO9C,EAGf,GAAIyE,EADAiB,EAAU5C,EAAE4C,WAGPf,EADD3E,EAAS0F,EAAQjH,KAAKqE,IAEtB,OAAO9C,EAiBnB,MAAM,IAAI0E,UAjCHkB,CAAoBN,GAgDjBO,CAAYR,GACtB,MA7EoB,iBA6EP/J,EACFA,EARf,SAAkB+J,GACd,MAAO,GAAKA,EAQLS,CAASxK,GAMpB,SAASyK,EAAQV,GACb,OAAOjH,MAAM4H,QACP5H,MAAM4H,QAAQX,GACdA,aAAoBlI,OAChBkI,aAAoBjH,MACyB,mBAA7CjB,OAAOK,UAAUkF,SAASjE,KAAK4G,GAI7C,SAASZ,EAAWY,GAEhB,MAA2B,mBAAbA,EAIlB,SAASY,EAAcZ,GAEnB,MAA2B,mBAAbA,EAelB,SAASb,EAAU0B,EAAGnD,GAClB,IAAIoD,EAAOD,EAAEnD,GACb,GAAIoD,MAAAA,EAAJ,CAEA,IAAK1B,EAAW0B,GACZ,MAAM,IAAIzB,UACd,OAAOyB,GAoBX,SAASrB,EAAa/G,GAClB,IAAIiC,EAASjC,EAAS8B,OACtB,OAAOG,EAAOC,MAAeD,EAIjC,SAASiF,EAAclH,GACnB,IAAIqI,EAAIrI,EAAiB,OACrBqI,GACAA,EAAE3H,KAAKV,GAMf,SAASyF,EAAuBV,GAC5B,IAAIuD,EAAQlJ,OAAOyB,eAAekE,GAClC,GAAiB,mBAANA,GAAoBA,IAAMnE,EACjC,OAAO0H,EAQX,GAAIA,IAAU1H,EACV,OAAO0H,EAEX,IAAI7I,EAAYsF,EAAEtF,UACd8I,EAAiB9I,GAAaL,OAAOyB,eAAepB,GACxD,GAAsB,MAAlB8I,GAA0BA,IAAmBnJ,OAAOK,UACpD,OAAO6I,EAEX,IAAI1M,EAAc2M,EAAe3M,YACjC,MAA2B,mBAAhBA,GAGPA,IAAgBmJ,EAFTuD,EAKJ1M,EAmOX,SAAS4E,EAAe+F,GAGpB,OAFAA,EAAIiC,QAAK7H,SACF4F,EAAIiC,GACJjC,EAn+BXvH,EAAS,WArBT,SAAkByJ,EAAYvJ,EAAQwJ,EAAaC,GAC/C,GAAKxD,EAAYuD,GAYZ,CACD,IAAKV,EAAQS,GACT,MAAM,IAAI9B,UACd,IAAKuB,EAAchJ,GACf,MAAM,IAAIyH,UACd,OAwZR,SAA6B8B,EAAYvJ,GACrC,IAAK,IAAI0D,EAAI6F,EAAWzG,OAAS,EAAGY,GAAK,IAAKA,EAAG,CAC7C,IACIgG,GAAYC,EADAJ,EAAW7F,IACD1D,GAC1B,IAAKiG,EAAYyD,KAAelD,EAAOkD,GAAY,CAC/C,IAAKV,EAAcU,GACf,MAAM,IAAIjC,UACdzH,EAAS0J,GAGjB,OAAO1J,EAlaI4J,CAAoBL,EAAYvJ,GAhBvC,IAAK8I,EAAQS,GACT,MAAM,IAAI9B,UACd,IAAKC,EAAS1H,GACV,MAAM,IAAIyH,UACd,IAAKC,EAAS+B,KAAgBxD,EAAYwD,KAAgBjD,EAAOiD,GAC7D,MAAM,IAAIhC,UAId,OAHIjB,EAAOiD,KACPA,OAAahI,GA6azB,SAA0B8H,EAAYvJ,EAAQwJ,EAAaK,GACvD,IAAK,IAAInG,EAAI6F,EAAWzG,OAAS,EAAGY,GAAK,IAAKA,EAAG,CAC7C,IACIgG,GAAYC,EADAJ,EAAW7F,IACD1D,EAAQwJ,EAAaK,GAC/C,IAAK5D,EAAYyD,KAAelD,EAAOkD,GAAY,CAC/C,IAAKhC,EAASgC,GACV,MAAM,IAAIjC,UACdoC,EAAaH,GAGrB,OAAOG,EArbIC,CAAiBP,EAAYvJ,EADpCwJ,EAAcrB,EAAcqB,GAC6BC,KA+DjE3J,EAAS,WAVT,SAAkBiK,EAAaC,GAQ3B,OAPA,SAAmBhK,EAAQwJ,GACvB,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UACd,IAAKxB,EAAYuD,KAgoBzB,SAAuBpB,GACnB,OAAQH,EAAKG,IACT,KAAK,EACL,KAAK,EAAgB,OAAO,EAC5B,QAAS,OAAO,GApoBkB6B,CAAcT,GAC5C,MAAM,IAAI/B,UACdd,EAA0BoD,EAAaC,EAAehK,EAAQwJ,MAmDtE1J,EAAS,iBAPT,SAAwBiK,EAAaC,EAAehK,EAAQwJ,GACxD,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzB7C,EAA0BoD,EAAaC,EAAehK,EAAQwJ,KA4CzE1J,EAAS,cAPT,SAAqBiK,EAAa/J,EAAQwJ,GACtC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzBrD,EAAoB4D,EAAa/J,EAAQwJ,KA4CpD1J,EAAS,iBAPT,SAAwBiK,EAAa/J,EAAQwJ,GACzC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzBnD,EAAuB0D,EAAa/J,EAAQwJ,KA4CvD1J,EAAS,cAPT,SAAqBiK,EAAa/J,EAAQwJ,GACtC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzB/C,EAAoBsD,EAAa/J,EAAQwJ,KA4CpD1J,EAAS,iBAPT,SAAwBiK,EAAa/J,EAAQwJ,GACzC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzB9C,EAAuBqD,EAAa/J,EAAQwJ,KA2CvD1J,EAAS,kBAPT,SAAyBE,EAAQwJ,GAC7B,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzB3C,EAAqB7G,EAAQwJ,KA2CxC1J,EAAS,qBAPT,SAA4BE,EAAQwJ,GAChC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UAGd,OAFKxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IACzBzC,EAAwB/G,EAAQwJ,KAwD3C1J,EAAS,iBAnBT,SAAwBiK,EAAa/J,EAAQwJ,GACzC,IAAK9B,EAAS1H,GACV,MAAM,IAAIyH,UACTxB,EAAYuD,KACbA,EAAcrB,EAAcqB,IAChC,IAAItD,EAAcN,EAAuB5F,EAAQwJ,GAAwB,GACzE,GAAIvD,EAAYC,GACZ,OAAO,EACX,IAAKA,EAAY1C,OAAOuG,GACpB,OAAO,EACX,GAAI7D,EAAYzC,KAAO,EACnB,OAAO,EACX,IAAIuC,EAAiBzB,EAASnG,IAAI4B,GAElC,OADAgG,EAAexC,OAAOgG,GAClBxD,EAAevC,KAAO,GAE1Bc,EAASf,OAAOxD,IADL,IAtffP,CAAQK,GAZZ,GAHJ,CA2lCGN,IAAYA,EAAU,gCCtmCzB,SAAS0K,EAAWX,EAAYvJ,EAAQ3B,EAAK8L,GACzC,IAA2HC,EAAvHC,EAAIC,UAAUxH,OAAQyH,EAAIF,EAAI,EAAIrK,EAAkB,OAATmK,EAAgBA,EAAOjK,OAAOsK,yBAAyBxK,EAAQ3B,GAAO8L,EACrH,GAAuB,iBAAZ3K,SAAoD,mBAArBA,QAAQiL,SAAyBF,EAAI/K,QAAQiL,SAASlB,EAAYvJ,EAAQ3B,EAAK8L,QACpH,IAAK,IAAIzG,EAAI6F,EAAWzG,OAAS,EAAGY,GAAK,EAAGA,KAAS0G,EAAIb,EAAW7F,MAAI6G,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEpK,EAAQ3B,EAAKkM,GAAKH,EAAEpK,EAAQ3B,KAASkM,GAChJ,OAAOF,EAAI,GAAKE,GAAKrK,OAAOC,eAAeH,EAAQ3B,EAAKkM,GAAIA,EAGhE,SAASG,EAAW9C,EAAG+C,GACnB,GAAuB,iBAAZnL,SAAoD,mBAArBA,QAAQoL,SAAyB,OAAOpL,QAAQoL,SAAShD,EAAG+C,GAV1GzK,OAAOC,eAAc0K,EAAU,aAAc,CAAEvM,OAAO,IAgBtD,IA+GWwM,EA/GPC,EAAgC,iBAChCC,EAA4B,aAI5BC,EAAmC,SAAUjL,EAAQ3B,GACrD,OAAOmB,QAAQ0L,YAAYC,EAA8BnL,EAAQ3B,IAMjE+M,EAAa,SAAUpL,EAAQ3B,GAC/B,IAAIuM,EAAWK,EAAiCjL,EAAQ3B,GAExD,OAAgBoD,MAAZmJ,GAA0CnJ,MAAjBmJ,EAASvL,KAC3BuL,EAASvL,KAGThB,GAuBXgN,EAAe,SAAUC,GACzB,OAAQA,GACJ,KAAKC,EAAUC,YACf,KAAKD,EAAUE,YACf,KAAKF,EAAUG,aACf,KAAKH,EAAUI,UACf,KAAKJ,EAAUK,sBACf,KAAKL,EAAUM,sBACf,KAAKN,EAAUO,uBACf,KAAKP,EAAUQ,oBAAqB,OAAO,EAC3C,QAAS,OAAO,IAapBC,EAA0B,SAAUC,GACpC,OAAOA,EAAS5M,MAPG,SAAU4M,GAC7B,IAAIC,EAAQD,EAASxG,WACjB0G,EAAKD,EAAMlI,QAAQ,SACnBoI,EAAKF,EAAMlI,QAAQ,IAAKmI,EAAK,GACjC,OAAOD,EAAMG,UAAUF,EAAK,EAAGC,GAAIE,OAGXC,CAAiBN,IAEzCO,EAAU,SAAUP,EAAU5N,GAC9B,OAAOmB,QAAQ0L,YAAY,cAAee,EAAU5N,IAapDkN,EAAY,CACZkB,YAAa,SACbC,sBAAuB,SACvBlB,YAAa,SACbI,sBAAuB,SACvBH,YAAa,SACbI,sBAAuB,SACvBH,aAAc,UACdI,uBAAwB,UACxBH,UAAW,OACXI,oBAAqB,OACrBY,WAAY,QACZC,qBAAsB,QACtBC,WAAY,aAEZC,EAAgB,SAAUC,EAAMC,GAEhC,IAAI1B,EAA+C7J,MAApCsL,EAAKE,4BAA2CF,EAAKE,8BAAgCjB,EAAwBe,GAI5H,OAHKC,EAAM1B,KACP0B,EAAM1B,GAAY,IAAIyB,GAEnBC,EAAM1B,IAMbH,EAA+B,gBAExBL,EAIRD,EAAQC,aAAeD,EAAqBC,WAAA,KAHhCA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAiB,KAAI,GAAK,OAKzC,IAgBIoC,EAAW,SAAU7O,GACrB,OAAO,SAAU8K,GACb,IACIgE,EAAe,IAAItN,SAAS,WAAaxB,EAAM,MACnD8K,EAAc,4BAAIgE,IAYtBC,EACA,SAA8BC,EAASrQ,GACnCE,KAAKF,KAAOA,EACZE,KAAKmQ,QAAUA,EACfnQ,KAAKoQ,OAAQ,IAAKC,OAASD,OAW/BE,EAAwB,SAAUvB,EAAUwB,EAAaV,EAAM/P,EAAM0Q,GACrE,IAEI,OADAzB,EAASwB,GAAezQ,EAAK0Q,GACtB,GAEX,MAAO3F,GAEH,MAAM,IAAIqF,EAAqB,aAAeK,EAAc,QAAUxB,EAASvP,YAAkB,KAAI,+BAAiCgR,EAAS1Q,KAMnJ2Q,EAAsB,SAAU1B,EAAUwB,EAAaV,EAAM/P,EAAM0Q,GACnE,IAEI,OADAzB,EAASwB,GAAe,IAAIG,KAAK5Q,EAAK0Q,IAC/B,GAEX,MAAO3F,GAEH,MAAM,IAAIqF,EAAqB,aAAeK,EAAc,QAAUxB,EAASvP,YAAkB,KAAI,+BAAiCgR,EAAS1Q,KAMnJ6Q,EAAuB,SAAU5B,EAAUwB,EAAaV,EAAM/P,EAAM0Q,GACpE,IAAII,OAA0BrM,IAAZiM,EAA0B1Q,EAAK0Q,IAAY,GAAM1Q,EAC/D+Q,EAAgBD,EAAWhL,OAC3BkL,EAA0B,GAC1BC,EAAgB,GAEpB,GADAhC,EAASwB,GAAeQ,EACpBF,EAAgB,EAChB,IAAK,IAAIrK,EAAI,EAAGA,EAAIqK,EAAerK,IAC/B,GAAIoK,EAAWpK,GAAI,CACf,IAAI4H,EAAWU,EAAwBe,GACvC,GAAK1B,EAAaC,GAMd2C,EAAcrP,KAAKsP,EAAoB3C,EAAUsB,YAAYiB,EAAWpK,GAAI4H,QANnD,CACzB,IAAI6C,EAAe,IAAIpB,EACvBiB,EAAwBpP,KAAK,CAAEwP,aAAc7C,EAAUkB,YAAaR,SAAUkC,EAAcnR,KAAM8Q,EAAWpK,KAC7GuK,EAAcrP,KAAKuP,IAQnC,OAAOH,GAKPK,EAAyB,SAAUpC,EAAUwB,EAAaV,EAAM/P,EAAM0Q,GACtE,IACIY,EADAN,EAA0B,GAMXvM,MAAfgM,GACAa,EAAiB,IAAIvB,EACrBd,EAASwB,GAAea,GAGxBA,EAAiBrC,EAErB,IAAIsC,EAAarO,OAAOmC,KAAKiM,GAkE7B,OA1DAC,GAPAA,EAAaA,EAAWC,QAAQhP,QAAQ0L,YAAYH,EAA+BuD,IAAmB,IAAI7P,OAAO,SAAUgQ,GACvH,QAAIH,EAAe5R,YAAY6D,UAAUC,eAAeiO,SAA6FhN,IAApFvB,OAAOsK,yBAAyB8D,EAAe5R,YAAY6D,UAAWkO,GAAMlL,MAItIgL,EAAWvK,QAAQyK,GAAQ,MAEdhQ,OAAO,SAAUgQ,GACrC,OAAQjP,QAAQkP,YAAY1D,EAA2BsD,EAAgBG,MAEhEE,QAAQ,SAAUtQ,GAIzB,IAAIuM,EAAWK,EAAiCqD,EAAgBjQ,GAKhE,QAJiBoD,IAAbmJ,IACAA,EAAW,CAAEvL,KAAMhB,EAAKuQ,UAAU,EAAOC,OAAQhE,EAAQC,WAAWgE,OAGpEjE,EAAQC,WAAWiE,YAAcnE,EAASiE,OAAQ,CAIlD,GAAIjE,EAASgE,eAAoCnN,IAAxBzE,EAAK4N,EAASvL,MACnC,MAAM,IAAI+N,EAAqB,oDAAsDxC,EAASvL,KAAO,qBAAuB2M,EAAwBsC,GAAkB,IAAMjQ,EAAM,IAAKrB,GAG3L,IAAIgS,EAA+BvN,MAAjBmJ,EAASvL,KAAoBuL,EAASvL,KAAOhB,EAE/D,GAAyBoD,MAArBzE,EAAKgS,GAKL,GAA6BvN,MAAzBmJ,EAASqE,aACTX,EAAejQ,GAAO6Q,EAAwBtE,EAASqE,cAAcE,YAAYnS,EAAKgS,SAErF,QAAsBvN,IAAlBmJ,EAASmC,KAIduB,EAAejQ,GAAOrB,EAAKgS,QAG3B,GA9MF,SAAU/C,EAAU5N,GAClC,OAAO8C,QAAUqL,EAAQP,EAAU5N,GA6Md+Q,CAAYd,EAAgBjQ,GAYT6P,EAAoB3C,EAAUoB,YAAY2B,EAAgBjQ,EAAKuM,EAASmC,KAAM/P,EAAMgS,GAC1FL,QAAQ,SAAUU,GAC5BrB,EAAwBpP,KAAKyQ,SAdE,CAEnC,IAAI/D,EAA4B7J,MAAjBmJ,EAASmC,KAAoBf,EAAwBpB,EAASmC,MA7MnF,SAAUd,EAAU5N,GAClC,IAAI0O,EAAOP,EAAQP,EAAU5N,GAE7B,OAAYoD,MAARsL,EACOf,EAAwBe,GAE5BA,EAuMkGuC,CAAYhB,EAAgBjQ,GAC5GgN,EAAaC,GAKd4C,EAAoB5C,GAAUgD,EAAgBjQ,EAAKiN,EAAUtO,EAAMgS,IAJnEV,EAAejQ,GAAO,IAAIuM,EAASmC,KACnCiB,EAAwBpP,KAAK,CAAEwP,aAAc7C,EAAUkB,YAAaM,KAAMnC,EAASmC,KAAMd,SAAUqC,EAAejQ,GAAMrB,KAAMA,EAAKgS,UAgBpJhB,GAKPuB,EAAgB,GAMhBL,EAA0B,SAAUnC,GACpC,OAAOD,EAAcC,EAAMwC,IAK3BrB,EAAsB,GAC1BA,EAAoB3C,EAAUkB,aAAe4B,EAC7CH,EAAoB3C,EAAUoB,YAAckB,EAC5CK,EAAoB3C,EAAUI,WAAagC,EAC3CO,EAAoB3C,EAAUC,aAAegC,EAC7CU,EAAoB3C,EAAUE,aAAe+B,EAC7CU,EAAoB3C,EAAUG,cAAgB8B,EAC9CU,EAAoB3C,EAAUsB,YAlKL,SAAUvO,EAAOyO,GACtC,OAAOA,IAASxB,EAAUI,UAAY,IAAIiC,KAAKtP,GAASA,GAkK5D4P,EAAoB3C,EAAUmB,uBAAyB2B,EACvDH,EAAoB3C,EAAUqB,sBAAwBiB,EACtDK,EAAoB3C,EAAUQ,qBAAuB4B,EACrDO,EAAoB3C,EAAUK,uBAAyB4B,EACvDU,EAAoB3C,EAAUM,uBAAyB2B,EACvDU,EAAoB3C,EAAUO,wBAA0B0B,EAExD,IAAIgC,EAAqB,SAAUC,EAAiBC,EAAmBC,GACnE,IAAIC,EAAiC,GACjC3B,EAAgByB,EAAkBzD,SAqBtC,OApBAyD,EAAkBG,SAAU,EAC5B5B,EAAcU,QAAQ,SAAUrQ,GAC5B,QAAcmD,IAAVnD,EACA,GAAK+M,SAAoB/M,GAarBoR,EAAkBpN,OAAO1D,KAAKkR,SAA0BxR,QAAOmD,EAAWnD,EAAOyR,SAAmBzR,SAbvE,CAC7B,IAAI+Q,EAAS,CACTW,GAAIC,IACJlD,KAAMxB,EAAUkB,YAChBR,SAAU3N,EACV4R,YAAaP,EACbrN,OAAQ,GACRjE,SAAKoD,EACLoO,SAAS,GAEbD,EAA+BP,EAAOW,IAAMX,KAOjDc,EAAqCP,IAE5CO,EAAuC,SAAUC,GACjD,IAAIC,EAA0B,GAI9B,OAHAnQ,OAAOmC,KAAK+N,GAA+BzB,QAAQ,SAAUtQ,GACzDgS,EAAwBzR,KAAKwR,EAA8B/R,MAExDgS,GAUPC,EAA2C,SAAUZ,EAAmBD,GACxEc,EAAyBb,GACzBD,EAAgBnN,OAAO1D,KAAK8Q,EAAkBpN,OAAOkO,QAErDD,EAA2B,SAAUb,GACrC,IAAIe,EAbwBpS,EAexBoS,EADAf,EAAkB3C,OAASxB,EAAUkB,kBAbrBhL,KADQpD,EAeMqR,EAAkBrR,KAdpB,IAAOA,EAAM,KAAQ,IACvC,IAa2CqR,EAAkBpN,OAbnCoO,OAAS,IAEhC,SAAUrS,EAAKsS,GAEhC,YADoBlP,IAARpD,EAAoB,IAAOA,EAAM,KAAQ,IACvC,IAAMsS,EAAoBD,OAAS,IAY/BE,CAAelB,EAAkBrR,IAAKqR,EAAkBpN,QAE1EoN,EAAkBpN,OAAS,GAC3BoN,EAAkBpN,OAAO1D,KAAK6R,IAE9BI,EAAsB,SAAUpB,EAAiBC,EAAmBC,GACpE,IAAIC,EAAiC,GACrCF,EAAkBG,SAAU,EAC5B,IAAItB,EAAarO,OAAOmC,KAAKqN,EAAkBzD,UAwD/C,OAhDAsC,GAPAA,EAAaA,EAAWC,QAAQhP,QAAQ0L,YAAYH,EAA+B2E,EAAkBzD,WAAa,IAAIxN,OAAO,SAAUgQ,GACnI,QAAIiB,EAAkBzD,SAASvP,YAAY6D,UAAUC,eAAeiO,SAAyGhN,IAAhGvB,OAAOsK,yBAAyBkF,EAAkBzD,SAASvP,YAAY6D,UAAWkO,GAAMrQ,MAI9JmQ,EAAWvK,QAAQyK,GAAQ,MAEdhQ,OAAO,SAAUgQ,GACrC,OAAQjP,QAAQkP,YAAY1D,EAA2B0E,EAAkBzD,SAAUwC,MAE5EE,QAAQ,SAAUtQ,GACzB,IAAIyS,EAAcpB,EAAkBzD,SAAS5N,GAC7C,GAAoB,OAAhByS,EACApB,EAAkBpN,OAAO1D,KAAK,IAAOP,EAAM,KAAQyS,QAElD,QAAoBrP,IAAhBqP,EAA2B,CAChC,IAAIlG,EAAWK,EAAiCyE,EAAkBzD,SAAU5N,GAC5E,QAAiBoD,IAAbmJ,GAA0BC,EAAQC,WAAWiG,YAAcnG,EAASiE,aAEnE,QAAiBpN,IAAbmJ,QAAkDnJ,IAAxBmJ,EAASoG,WAA0B,CAClE,IAAIA,EAAaC,EAAsBrG,EAASoG,YAChDtB,EAAkBpN,OAAO1D,KAAKkR,EAAmBvE,EAAUC,aAAaJ,EAAWsE,EAAkBzD,SAAU5N,GAAMyS,EAAaE,SAGlI,GAAIF,aAAuB3P,MAAO,CAC9B,IAAIkO,EAAS,CACTW,GAAIC,IACJlD,KAAMxB,EAAUoB,WAChBV,SAAU6E,EACVZ,YAAaP,EACbrN,OAAQ,GACRjE,IAAK+M,EAAWsE,EAAkBzD,SAAU5N,GAC5CwR,SAAS,GAEbD,EAA+BP,EAAOW,IAAMX,OAEtChE,SAAoByF,IAatBE,EAAajB,SAAmBe,GACpCpB,EAAkBpN,OAAO1D,KAAKkR,SAA0BgB,GAAa1F,EAAWsE,EAAkBzD,SAAU5N,GAAMyS,EAAaE,MAb3H3B,EAAS,CACTW,GAAIC,IACJlD,KAAMxB,EAAUkB,YAChBR,SAAU6E,EACVZ,YAAaP,EACbrN,OAAQ,GACRjE,IAAK+M,EAAWsE,EAAkBzD,SAAU5N,GAC5CwR,SAAS,GAEbD,EAA+BP,EAAOW,IAAMX,MASrDc,EAAqCP,IAK5CsB,EAAsB,SAAU7S,EAAK4N,EAAU+E,GAC/C,IAAI1S,EAAQ0S,EAAWG,UAAUlF,GACjC,YAAYxK,IAARpD,EACO,IAAOA,EAAM,KAAQC,EAGrBA,GAGX8S,EAMiBlH,EAAW,CACxBgD,EAAS,kBACTxC,EAAW,oBAAqB,KAPpC,WACIxN,KAAKiU,UAAY,SAAU7S,GACvB,OAAOA,EAAM+S,aASrBC,EAMmBpH,EAAW,CAC1BgD,EAAS,oBACTxC,EAAW,oBAAqB,KAPpC,WACIxN,KAAKiU,UAAY,SAAU7S,GACvB,OAAOO,KAAK0S,UAAUjT,MAS9BkT,EAMmBtH,EAAW,CAC1BgD,EAAS,oBACTxC,EAAW,oBAAqB,KAPpC,WACIxN,KAAKiU,UAAY,SAAU7S,GACvB,OAAOA,KASfmT,EAMoBvH,EAAW,CAC3BgD,EAAS,qBACTxC,EAAW,oBAAqB,KAPpC,WACIxN,KAAKiU,UAAY,SAAU7S,GACvB,OAAOA,KAYfyR,EAAc,GAClBA,EAAYxE,EAAUC,aAAe,IAAI8F,EACzCvB,EAAYxE,EAAUE,aAAe,IAAI+F,EACzCzB,EAAYxE,EAAUI,WAAa,IAAIyF,EACvCrB,EAAYxE,EAAUG,cAAgB,IAAI+F,EAC1C1B,EAAYxE,EAAUK,uBAAyBmE,EAAYxE,EAAUC,aACrEuE,EAAYxE,EAAUM,uBAAyBkE,EAAYxE,EAAUE,aACrEsE,EAAYxE,EAAUQ,qBAAuBgE,EAAYxE,EAAUI,WACnEoE,EAAYxE,EAAUO,wBAA0BiE,EAAYxE,EAAUG,cAMtE,IAAIuF,EAAwB,SAAUlE,GAClC,OAAOD,EAAcC,EAAMgD,IAE3BD,EAAqB,GACzBA,EAAmBvE,EAAUC,aAAe0F,EAC5CpB,EAAmBvE,EAAUE,aAAeyF,EAC5CpB,EAAmBvE,EAAUG,cAAgBwF,EAC7CpB,EAAmBvE,EAAUI,WAAauF,EAC1CpB,EAAmBvE,EAAUoB,YAAc6C,EAC3CM,EAAmBvE,EAAUkB,aAAeoE,EAC5Cf,EAAmBvE,EAAUK,uBAAyBsF,EACtDpB,EAAmBvE,EAAUM,uBAAyBqF,EACtDpB,EAAmBvE,EAAUO,wBAA0BoF,EACvDpB,EAAmBvE,EAAUQ,qBAAuBmF,EACpDpB,EAAmBvE,EAAUqB,sBAAwB4C,EACrDM,EAAmBvE,EAAUmB,uBAAyBmE,EACtD,IAAIZ,EAAW,WACX,OAAOhL,KAAKC,SAAW,IAAM0I,KAAK8D,QAGtC,SAAWC,GAIPA,EAAaC,iBAAmB,SAAU7E,EAAM/P,GAC5C,IAMIsJ,EAAS,IALT,WACIpJ,KAAK2U,eAAYpQ,GAMzB,OADAqQ,EAAmB5D,EAAoB3C,EAAUoB,YAAYrG,EAAQ,YAAayG,EAAM/P,OAAMyE,IACvF6E,EAAOuL,WAKlBF,EAAaxC,YAAc,SAAUpC,EAAM/P,GACvC,IAAI+U,EAAc,IAAIhF,EAOtB,OADA+E,EAAmB,CALe,CAC9B1D,aAAc7C,EAAUkB,YACxBR,SAAU8F,EACV/U,KAAMA,KAGH+U,GAEX,IAAID,EAAqB,SAAUE,GAC/B,IAAIC,EAA4B,GAChCD,EAA6BrD,QAAQ,SAAUU,GAC3C4C,EAA0BrT,KAAKyQ,KAInC,IAFA,IAAI6C,EAA8BD,EAA0B,GAEtBxQ,MAA/ByQ,GACgBhE,EAAoBgE,EAA4B9D,cAAc8D,EAA4BjG,SAAUiG,EAA4BzE,YAAayE,EAA4BnF,KAAMmF,EAA4BlV,KAAMkV,EAA4BxE,SACnPiB,QAAQ,SAAUwD,GAC3BF,EAA0BrT,KAAKuT,KAEnCD,EAA8BD,EAA0BzB,OAMhEmB,EAAaR,UAAY,SAAU9J,GAC/B,IAAIiG,EAAQ,GACR+B,EAAS,CACTW,QAAIvO,EACJsL,MAA6B,IAAvB5L,MAAM4H,QAAQ1B,GAAgBkE,EAAUoB,WAAapB,EAAUkB,YACrER,SAAU5E,EACV6I,iBAAazO,EACba,OAAQ,GACRjE,SAAKoD,EACLoO,SAAS,GAEbvC,EAAM1O,KAAKyQ,GACX,EAAG,CACC,IAAI+C,EAAiB9E,EAAMA,EAAMxK,OAAS,GACtCuP,EAAe/E,EAAMA,EAAMxK,OAAS,EAAIsP,EAAelC,YAAc,GACzE,GAAIkC,EAAevC,QACfS,EAAyC8B,EAAgBC,GACzD/E,EAAMkD,UAEL,CACD,IAAI8B,EAAiBxC,EAAmBsC,EAAerF,MAAMsF,EAAcD,EAAgB9E,EAAMxK,OAAS,GAC1G,GAAIwP,EAAexP,OAAS,EAExB,IADA,IAAID,EAAQyP,EAAexP,SAClBD,GAAS,GACdyK,EAAM1O,KAAK0T,EAAezP,SAI1ByK,EAAMxK,OAAS,GACfwN,EAAyC8B,EAAgBC,GAE7D/E,EAAMkD,aAGTlD,EAAMxK,OAAS,GAExB,OADAyN,EAAyBlB,GAClBA,EAAO/M,OAAO,IAlF7B,CAoFGuI,EAAQ8G,eAAiB9G,EAAuB8G,aAAA,KAEnD9G,EAAA0H,aA9fmB,SAAU3H,GACzB,OA/F2B,SAAUA,GACrC,OAUuB,SAAUb,EAAaa,GAC9C,OAAOpL,QAAQoL,SAASb,EAAaa,GAX9B4H,CAAqBrH,EAA8BP,GA+F/C6H,CADa,iBAAb7H,EACyB,CAAEvL,KAAMuL,EAAUgE,UAAU,EAAOC,OAAQhE,EAAQC,WAAWgE,MAG9DlE,IA0fxCC,EAAAuC,qBAA+BA,EAC/BvC,EAAAqC,SAAmBA,EACnBrC,EAAA6H,WAveiB,WACb,OAlHO,SAAU1S,EAAQwJ,GACrBhK,QAAQmT,eAAe3H,GAA2B,EAAMhL,EAAQwJ,KAwlBxEqB,EAAAuG,eAAyBA,0CCrnBZwB,MAAAA,EAOXlW,YAAYmW,GAAsB3V,KAL3B4V,SAK2B,EAAA5V,KAH3B6V,SAG2B,EAAA7V,KAF3B2V,SAE2B,EAChC3V,KAAK2V,IAAMA,GAAO5N,KAAKC,SAASO,SAAS,IAAIuN,MAAM,GAG3CpB,iBAAoBqB,GAC5B,OAAOtB,EAAAA,aAAaC,iBAAoB1U,KAAKR,YAAoBuW,GAGzD9D,YAAe+D,GACvB,OAAOvB,EAAAA,aAAaxC,YAAejS,KAAKR,YAAoBwW,GAGpD/B,UAAUgC,GAClB,OAAOxB,EAAYA,aAACR,UAAUgC,GAGtBC,WAAWC,EAAM,IACzB,OAAWC,IAAAA,gBAAJrU,EAAA,GAAyBoU,IAGxBzW,OAAMW,KAAEA,EAAFC,SAAQA,IActB,OAAOC,QAAQC,QAAQjB,EAAEa,QAAQ,CAAEC,KAAAA,EAAMC,SAAAA,MCxDvC,MAAO+V,UAAeX,EAC1BlW,YAAYmW,GACVW,MAAMX,GAGEY,eACR,OAAIvW,KAAK6V,MAAQvW,EAAEkX,YACNjW,IAAAA,QAAiB,CAACC,EAASC,KACpCT,KAAKN,MAAM,CACTW,KAAML,KAAKiU,UAAUjU,MACrBM,SACEhB,EAAE+C,2BAA6BrC,KAAKkW,WAAW,CAAExO,MAAO1H,KAAK6V,MAC/DzL,OAAQ,SAEPxK,KAAK,IAAMY,GAAQ,IACnBP,MAAOC,GAAUO,EAAOP,MAGtBK,QAAQE,SAITgW,OACR,OAAIzW,KAAK6V,MAAQvW,EAAEoX,YAAc1W,KAAK6V,MAAQvW,EAAEkX,YACvC,IAAIjW,QAAW,CAACC,EAASC,KAC9BT,KAAKN,MAAM,CACTW,KAAML,KAAKiU,UAAUjU,MACrBM,SAAUhB,EAAE2C,kBAAoBjC,KAAKkW,WAAW,CAAExO,MAAO1H,KAAK6V,MAC9DzL,OAAQ,SAEPxK,KAAMoW,GAAQxV,EAAQR,KAAKiS,YAAe+D,KAC1C/V,MAAOC,GAAUO,EAAOP,MAGtBK,QAAQE,SAITkW,OACR,OAAWpW,IAAAA,QAAW,CAACC,EAASC,KAC9BT,KAAKN,MAAM,CACTW,KAAML,KAAKiU,UAAUjU,MACrBM,SAAUhB,EAAEmC,kBAAoBzB,KAAKkW,WAAW,CAAExO,MAAO1H,KAAK6V,MAC9DzL,OAAQ,SAEPxK,KAAMoW,GAAQxV,EAAQR,KAAKiS,YAAe+D,KAC1C/V,MAAOC,GAAUO,EAAOP,MAIrB0W,IAAO/V,GACf,OAAWN,IAAAA,QAAW,CAACC,EAASC,KAC9BT,KAAKN,MAAM,CACTW,KAAML,KAAKiU,UAAUjU,MACrBM,SACEhB,EAAEuC,iBAAmB7B,KAAKkW,WAALnU,EAAA,GAAqBlB,EAArB,CAA8B6G,MAAO1H,KAAK6V,OACjEzL,OAAQ,QAEPxK,KAAMoW,GAAQxV,EAAQR,KAAKiS,YAAe+D,KAC1C/V,MAAOC,GAAUO,EAAOP,MAI/BgB,IAAOL,GACL,OAAO,IAAIN,QAAW,CAACC,EAASC,KAC9BT,KAAKN,MAAM,CACTY,SACEhB,EAAEgC,iBAAmBtB,KAAKkW,WAALnU,EAAA,GAAqBlB,EAArB,CAA8B6G,MAAO1H,KAAK6V,OACjEzL,OAAQ,QAEPxK,KAAMoW,GAAQxV,EAAQR,KAAKiS,YAAe+D,KAC1C/V,MAAOC,GAAUO,EAAOP,MAI/BoG,OAAOzF,GACL,OAAWN,IAAAA,QAAiB,CAACC,EAASC,KACpCT,KAAKN,MAAM,CACTY,SACEhB,EAAE0C,oBACFhC,KAAKkW,WAAgBrV,EAAAA,GAAAA,EAAS6G,CAAAA,MAAO1H,KAAK6V,OAC5CzL,OAAQ,WAEPxK,KAAK,IAAMY,GAAQ,IACnBP,MAAOC,GAAUO,EAAOP,aCjFpB2W,UAAcR,EAKzB7W,aAAY2C,KAAEA,EAAFD,SAAQA,EAARyT,IAAkBA,GAA8B,IAC1DW,MAAMX,GADsD3V,KAJtDmC,UAIsD,EAAAnC,KAHtDkC,cACA4U,EAAAA,KAAAA,aAIN9W,KAAKmC,KAAOA,EACZnC,KAAKkC,SAAWA,EAChBlC,KAAK6V,IAAMvW,EAAEoX,WAGfK,QAAO5U,KAAEA,EAAFD,SAAQA,EAAR4U,MAAkBA,GAAgC,IAIvD,OAHA9W,KAAKmC,KAAOA,GAAQnC,KAAKmC,KACzBnC,KAAK8W,MAAQA,GAAS9W,KAAK8W,MAC3B9W,KAAKkC,SAAWA,GAAYlC,KAAKkC,SACrB0U,KAAAA,IAAW,CAAEzU,KAAMnC,KAAKmC,OAGtC6U,WACE,YAAYL,OAGdM,QACE,OAAO,IAAI1W,QAAQ,CAACC,EAASC,KAC3BT,KAAKyW,OACF7W,KAAMsX,GAAU1W,EAAQ0W,EAAMH,OAAO,CAAED,MAAOxX,EAAE6X,uBAChDlX,MAAOC,GAAUO,EAAOP,MAI/BkX,SACEpX,KAAK8W,MAAQxX,EAAE+X,2BC/BNC,UAAejB,EAM1B7W,aAAY2C,KAAEA,EAAFC,MAAQA,EAARF,SAAeA,EAAfyT,IAAyBA,GAA+B,IAClEW,MAAMX,GAD8D3V,KALtEmC,UACAC,EAAAA,KAAAA,WACAF,EAAAA,KAAAA,qBACA4U,WAEsE,EAEpE9W,KAAKmC,KAAOA,EACZnC,KAAKoC,MAAQA,EACbpC,KAAKkC,SAAWA,EAChBlC,KAAK8W,MAAQxX,EAAEiY,oBACfvX,KAAK6V,IAAMvW,EAAEkX,YAGfO,QAAO5U,KAAEA,EAAFC,MAAQA,EAARF,SAAeA,EAAf4U,MAAyBA,GAAiC,IAK/D,OAJA9W,KAAKmC,KAAOA,GAAQnC,KAAKmC,KACzBnC,KAAKoC,MAAQA,GAASpC,KAAKoC,MAC3BpC,KAAK8W,MAAQA,GAAS9W,KAAK8W,MAC3B9W,KAAKkC,SAAWA,GAAYlC,KAAKkC,SAC1BlC,KAAK4W,IAAY,CAAExU,MAAOpC,KAAKoC,QAGxC4U,WACE,OAAOhX,KAAK2W,OAGdM,QACE,OAAOjX,KAAKyW,OAGde,UACE,YAAYjB,eAGda,iBC9BWK,UAAYpB,EAMvB7W,aAAY2C,KAAEA,EAAFuV,WAAQA,EAARC,SAAoBA,EAApBhC,IAA8BA,GAA4B,IACpEW,MAAMX,GADgE3V,KALxEmC,UACA2U,EAAAA,KAAAA,kBACAc,WAGwE,EAAA5X,KAFxE0X,gBAIE,EAAA1X,KAAKmC,KAAOA,EACZnC,KAAK0X,WAAaA,EAClB1X,KAAK8W,MAAQxX,EAAEuY,iBACf7X,KAAK6V,IAAMvW,EAAEwY,SACb9X,KAAK4X,MAAQ5X,KAAK+X,WAAW,CAAEJ,SAAAA,IAGjCZ,QAAO5U,KAAEA,EAAFuV,WAAQA,EAARZ,MAAoBA,EAApBc,MAA2BA,GAA8B,IAK9D,OAJA5X,KAAK0X,WAAaA,GAAc1X,KAAK0X,WACrC1X,KAAKmC,KAAOA,GAAQnC,KAAKmC,KACzBnC,KAAK8W,MAAQA,GAAS9W,KAAK8W,MAC3B9W,KAAK4X,MAAQA,GAAS5X,KAAK4X,MACfhB,KAAAA,IAAS,CAAEjB,IAAK3V,KAAK2V,MAGnCqB,WACE,OAAYL,KAAAA,OAGdqB,cACE,OAAOhY,KAAK4X,MAAMhS,OAGpBqS,SAAQtC,IAAEA,IACR,YAAYiC,MAAMrW,OAAQ2W,GAASA,EAAKvC,MAAQA,GAAK,GAGvDwC,UAASxC,IAAEA,IACT,IAAK,MAAMuC,KAAQlY,KAAK4X,MACtB,GAAIM,EAAKvC,MAAQA,EAAK,CACpBuC,EAAKpB,MAAQxX,EAAE8Y,kBACf,MAGJ,OAAYrB,KAAAA,SAGdsB,aAAY1C,IAAEA,IACZ,IAAK,MAAMuC,KAAaN,KAAAA,MACtB,GAAIM,EAAKvC,MAAQA,EAAK,CACpBuC,EAAKpB,MAAQxX,EAAEgZ,oBACf,MAGJ,YAAYvB,SAGdwB,YAAW5C,IAAEA,IACX,IAAK,MAAMuC,KAAaN,KAAAA,MACtB,GAAIM,EAAKvC,MAAQA,EAAK,CACpBuC,EAAKpB,MAAQxX,EAAEkZ,oBACf,MAGJ,OAAOxY,KAAK+W,SAGd0B,mBAGE,IAAK,MAAMP,KAAaN,KAAAA,MACtB,GAAIM,EAAKpB,QAAUxX,EAAE8Y,kBAAmB,CACtCF,EAAKpB,MAAQxX,EAAEkZ,oBACf,MAGJ,OAAOxY,KAAK+W,SAGdgB,YAAWJ,SAAEA,IACX,IAAIe,EAAqB,GACzB,IAAK,IAAIlS,EAAI,EAAGA,EAAImR,EAAUnR,IAC5BkS,EAAKhX,KAAK,CACRiU,IAAK5N,KAAKC,SAASO,SAAS,IAAIuN,MAAM,GACtCjG,KAAMvQ,EAAEqZ,mBACR7B,MAAOxX,EAAE8Y,oBAGb,OAAOM,SCpFEE,UAAgBvC,EAS3B7W,aAAYqZ,UACVA,EADU1W,KAEVA,EAFU2W,IAGVA,EAHUC,IAIVA,EAJUC,IAKVA,EALUrD,IAMVA,GAC0B,IAC1BW,MAAMX,GADsB3V,KAf9B6Y,eAe8B,EAAA7Y,KAd9BmC,UACA2W,EAAAA,KAAAA,SACAC,EAAAA,KAAAA,SACAC,EAAAA,KAAAA,gBACAlC,WAU8B,EAAA9W,KAT9BiZ,gBAWE,EAAAjZ,KAAK6Y,UAAYA,EACjB7Y,KAAKmC,KAAOA,EACZnC,KAAK8Y,IAAMA,EACX9Y,KAAK+Y,IAAMA,EACX/Y,KAAKgZ,IAAM,IAAItI,KAAKsI,GAAKzQ,WACzBvI,KAAK8W,MAAQxX,EAAE4Z,eACflZ,KAAK6V,IAAMvW,EAAE6Z,aAGfpC,QAAO5U,KAAEA,EAAF2W,IAAQA,EAARC,IAAaA,EAAbC,IAAkBA,GAAgC,IAKvD,OAJAhZ,KAAKmC,KAAOA,GAAQnC,KAAKmC,KACzBnC,KAAK8Y,IAAMA,GAAO9Y,KAAK8Y,IACvB9Y,KAAK+Y,IAAMA,GAAO/Y,KAAK+Y,IACvB/Y,KAAKgZ,IAAMA,GAAOhZ,KAAKgZ,IAChBhZ,KAAK4W,IAAa,CAAEjB,IAAK3V,KAAK2V,MAGvCqB,WACE,YAAYL,OAGdyC,QACEpZ,KAAK8W,MAAQxX,EAAE+Z,mBACfrZ,KAAKiZ,WAAa3Z,EAAEga,yBAGtBC,SACEvZ,KAAK8W,MAAQxX,EAAE+Z,mBACfrZ,KAAKiZ,WAAa3Z,EAAEka,2BC3ClB,MAAOC,UAAgBpD,EAQ3B7W,aAAYka,OACVA,EADUC,WAEVA,EAFUC,MAGVA,EAHUC,IAIVA,EAJUC,SAKVA,EALUnE,IAMVA,GAC0B,IAC1BW,MAAMX,GADsB3V,KAdtB4Z,WAcsB,EAAA5Z,KAbtB6Z,SAasB,EAAA7Z,KAZtB8W,WAYsB,EAAA9W,KAXtB8Z,cACAJ,EAAAA,KAAAA,YACAC,EAAAA,KAAAA,gBAWN,EAAA3Z,KAAK0Z,OAASA,EACd1Z,KAAK2Z,WAAaA,EAClB3Z,KAAK8W,MAAQxX,EAAEya,gBACf/Z,KAAK8Z,SAAWA,GAAYxa,EAAEqZ,mBAC9B3Y,KAAK6V,IAAMvW,EAAE0a,aACbha,KAAK4Z,MAAQ,IAAIlJ,KAAKkJ,GAAOrR,WAC7BvI,KAAK6Z,IAAM,IAAInJ,KAAKmJ,GAAKtR,WAG3BwO,QAAOD,MAAEA,GAAkC,IAEzC,OADA9W,KAAK8W,MAAQA,GAAS9W,KAAK8W,MACpB9W,KAAK4W,IAAa,CAAEjB,IAAK3V,KAAK2V,MAGvCsE,OACE,OAAYtD,KAAAA,OAGduD,SACE,OAAOla,KAAK+W,OAAO,CAAED,MAAOxX,EAAE6a,mBAAoBva,KAAMC,GAAQA,GAGlEY,SACE,OAAOT,KAAK+W,OAAO,CAAED,MAAOxX,EAAE8a,mBAAoBxa,KAAMC,GAAQA,GAGlEwa,WACE,OAAO9Z,QAAQC,QAAQ,cAGzB8Z,OACE,OACG,IAAI5J,KAAK1Q,KAAK6Z,KAAK1F,UAAY,IAAIzD,KAAK1Q,KAAK4Z,OAAOzF,WACrD7U,EAAEib,qBAINC,UAEE,OADAxa,KAAK8W,MAAQxX,EAAEmb,aACJla,IAAAA,QAAQ,CAACC,EAASC,KAC3BT,KAAK+W,SACFnX,KAAM8a,KACL,IAAIjD,GACDvW,IAAS,CAAEyU,IAAK+E,EAAQhB,SACxB9Z,KAAM+a,GAAQna,EAAQma,EAAIlC,uBAE9BxY,MAAOC,GAAUO,EAAOP,MAI/BqI,WACE,OAAWhI,IAAAA,QAAiBC,IAC1BD,QAAQqa,IAAI,EACV,IAAIhC,GACD1X,IAAa,CAAEyU,IAAK3V,KAAK2Z,aACzB/Z,KAAMib,IACL,IAAIvD,GACDpW,IAAY,CAAEyU,IAAKkF,EAAQhC,YAC3BjZ,KAAMkb,GAAWA,KAExB,IAAIrD,GAAMvW,IAAS,CAAEyU,IAAK3V,KAAK0Z,SAAU9Z,KAAM+a,GAAQA,KAEtD/a,KAAK,EAAEkb,EAAQH,MACdna,EACK,GAAAsa,EAAO3Y,KAAK4Y,wCACbJ,EAAIxY,SACDnC,KAAKgb,YAAY,IAAItK,KAAK1Q,KAAK4Z,aAAa5Z,KAAKgb,YACpD,IAAItK,KAAK1Q,KAAK6Z,YAInB5Z,MAAM,IAAMO,EAAQ,qCAI3Bwa,YAAYC,GACV,MAAMC,EAAgBC,GAAQA,EAAI5S,WAAW6S,SAAS,EAAG,KACzD,MACE,CACEH,EAAKI,cACLH,EAAaD,EAAKK,WAAa,GAC/BJ,EAAaD,EAAKM,YAClB/H,KAAK,KACP,IACA,CACE0H,EAAaD,EAAKO,YAClBN,EAAaD,EAAKQ,eAElBjI,KAAK,YChHAkI,UAAgBrF,EAQ3B7W,aAAYmc,UACVA,EADUC,WAEVA,EAFUC,YAGVA,EAHUC,MAIVA,EAJUC,QAKVA,EALUC,WAMVA,EANUrG,IAOVA,GAC0B,IAC1BW,MAAMX,GADsB3V,KAf9B2b,sBACAE,iBAc8B,EAAA7b,KAb9Bgc,gBAa8B,EAAAhc,KAZ9B8b,WAY8B,EAAA9b,KAX9B+b,aACAjF,EAAAA,KAAAA,aAYE9W,KAAK4V,IAAMgG,EACX5b,KAAK2b,UAAYA,EACjB3b,KAAK6b,YAAcA,EACnB7b,KAAKgc,WAAaA,EAClBhc,KAAK8b,MAAQA,EACb9b,KAAK+b,QAAUA,EACf/b,KAAK6V,IAAMvW,EAAE2c,aACbjc,KAAK8W,MAAQxX,EAAE4c,wBAGjBnF,QAAOD,MAAEA,GAAkC,IAEzC,OADA9W,KAAK8W,MAAQA,GAAS9W,KAAK8W,MACfF,KAAAA,IAAa,CAAEjB,IAAK3V,KAAK2V,MAGvCsE,OACE,IAAIpU,EAAS,GACb,IAAK,IAAIW,EAAI,EAAGA,EAAIxG,KAAK4V,IAAIhQ,OAAQY,IACnCX,EAAOnE,KACL,IAAIga,EAAQ,CACVC,UAAW3b,KAAK4V,IAAIpP,GACpBqV,YAAa7b,KAAK6b,YAClBC,MAAO9b,KAAK8b,MACZC,QAAS/b,KAAK+b,QACdC,WAAYhc,KAAKgc,aAChBrF,QAGP,OAAOpW,QAAQqa,IAAI/U,IClDvB,MAAMsW,EAAM,CACV,CAAC7c,EAAEoX,YAAaG,EAChB,CAACvX,EAAEkX,aAAcc,EACjB,CAAChY,EAAEwY,UAAWL,EACd,CAACnY,EAAE2c,cAAeP,EAClB,CAACpc,EAAE8c,iCCL6B/F,EAKhC7W,aAAYmc,UAAEA,EAAFI,QAAaA,EAAbpG,IAAsBA,GAAqC,IACrEW,MAAMX,GADiE3V,KAJjE2b,eACAI,EAAAA,KAAAA,oBACAjF,WAEiE,EAEvE9W,KAAK2b,UAAYA,EACjB3b,KAAK+b,QAAUA,EACf/b,KAAK6V,IAAMvW,EAAE8c,kBAGfrF,QAAOD,MAAEA,GAAuC,IAE9C,OADA9W,KAAK8W,MAAQA,GAAS9W,KAAK8W,MACpB9W,KAAK4W,IAAkB,CAAEjB,IAAK3V,KAAK2V,MAG5CsE,OAEE,OADAja,KAAK8W,MAAQxX,EAAE+c,8BACRrc,KAAK2W,SDbd,CAACrX,EAAE0a,cAAeP,EAClB,CAACna,EAAE6Z,cAAeP,SAGP0D,UAAmB5G,EAC9BlW,YAAYyB,GACVqV,QACAtW,KAAK6V,IAAM5U,EACXjB,KAAKR,YAAc2c,EAAIlb,GAGzBrB,KAAQoM,GACN,OAAWzL,IAAAA,QAAa,CAACC,EAASC,KAChCT,KAAKN,MAAM,CACTY,SAAUhB,EAAE+B,qBAAuBrB,KAAKkW,WAAW,CAAExO,MAAO1H,KAAK6V,MACjEzL,OAAQ,QAEPxK,KAAMmW,GAAY/V,KAAK0U,iBAAoBqB,IAC3CnW,KAAM8Y,GAASlY,EAAQwL,EAAK0M,KAC5BzY,MAAOC,GAAUO,EAAOP"}